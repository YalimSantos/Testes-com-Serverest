{
  "stats": {
    "suites": 5,
    "tests": 37,
    "passes": 32,
    "pending": 0,
    "failures": 5,
    "start": "2022-07-20T14:17:17.676Z",
    "end": "2022-07-20T14:17:56.330Z",
    "duration": 15121,
    "testsRegistered": 37,
    "passPercent": 86.48648648648648,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "263a8d9d-c0b9-4035-bb75-e6a2ccc883da",
      "title": "",
      "fullFile": "cypress/integration/2_usuarios.spec.js",
      "file": "cypress/integration/2_usuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "35a1dbf9-fb8f-4b53-a2f7-29dc706205b4",
          "title": "Casos de teste da rota /usuarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "T01 - Buscar todos os usuários",
              "fullTitle": "Casos de teste da rota /usuarios T01 - Buscar todos os usuários",
              "timedOut": null,
              "duration": 294,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.contractValidation(res, 'get-usuarios', 200);\n  _validaServerest.default.ValidarBuscaDeUsuarios(res, 200);\n});",
              "err": {},
              "uuid": "331e1cce-94e3-48d4-98fc-324be780cba8",
              "parentUUID": "35a1dbf9-fb8f-4b53-a2f7-29dc706205b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T02 - Buscar um usuário em específico",
              "fullTitle": "Casos de teste da rota /usuarios T02 - Buscar um usuário em específico",
              "timedOut": null,
              "duration": 392,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarIdAleatorio();\ncy.get('@usuarioId').then(usuarioId => {\n  _serverest.default.localizarUsuarioComId(usuarioId._id).then(res => {\n    cy.contractValidation(res, 'get-usuarios/id', 200);\n    _validaServerest.default.ValidarBuscaDeUsuariosComId(res, 200);\n  });\n});",
              "err": {},
              "uuid": "d6996990-e5bd-486b-af95-2fe282ecef84",
              "parentUUID": "35a1dbf9-fb8f-4b53-a2f7-29dc706205b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T03 - Postar um novo usuário",
              "fullTitle": "Casos de teste da rota /usuarios T03 - Postar um novo usuário",
              "timedOut": null,
              "duration": 239,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.postarNovoUsuario().then(res => {\n  cy.contractValidation(res, 'post-usuarios', 201);\n  _validaServerest.default.ValidarPostarNovoUsuario(res, 201);\n});",
              "err": {},
              "uuid": "91b04772-91c8-40d3-854e-15a631437f0f",
              "parentUUID": "35a1dbf9-fb8f-4b53-a2f7-29dc706205b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T04 - Modificar as informações de um usuário",
              "fullTitle": "Casos de teste da rota /usuarios T04 - Modificar as informações de um usuário",
              "timedOut": null,
              "duration": 653,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarIdAleatorio();\ncy.get('@usuarioId').then(usuarioId => {\n  _serverest.default.modificarUsuario(usuarioId._id).then(res => {\n    cy.contractValidation(res, 'put-usuarios/id', 200);\n    _validaServerest.default.validarModificarUsuario(res, 200);\n  });\n});",
              "err": {},
              "uuid": "7104fc19-8dae-4039-a1a2-9f30d863effe",
              "parentUUID": "35a1dbf9-fb8f-4b53-a2f7-29dc706205b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T05 - Criar um novo usuário com o método PUT",
              "fullTitle": "Casos de teste da rota /usuarios T05 - Criar um novo usuário com o método PUT",
              "timedOut": null,
              "duration": 208,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let id = _factory.default.gerarId();\n_serverest.default.criarUsuarioComPut(id).then(res => {\n  cy.contractValidation(res, 'put-usuarios/id', 201);\n  _validaServerest.default.ValidarPostarNovoUsuario(res, 201);\n});",
              "err": {},
              "uuid": "5636d856-b08d-4d15-bb66-db24279096d0",
              "parentUUID": "35a1dbf9-fb8f-4b53-a2f7-29dc706205b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T06 - Deletar um usuário",
              "fullTitle": "Casos de teste da rota /usuarios T06 - Deletar um usuário",
              "timedOut": null,
              "duration": 666,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarIdAleatorio();\ncy.get('@usuarioId').then(usuarioId => {\n  _serverest.default.deletarUsuario(usuarioId._id).then(res => {\n    cy.contractValidation(res, 'delete-usuarios/id', 200);\n    _validaServerest.default.validarDeletarUsuario(res, 200);\n  });\n});",
              "err": {},
              "uuid": "22d32497-1ba1-48bf-908c-2502d91fedbc",
              "parentUUID": "35a1dbf9-fb8f-4b53-a2f7-29dc706205b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T07 - Deletar um usuário que não exista",
              "fullTitle": "Casos de teste da rota /usuarios T07 - Deletar um usuário que não exista",
              "timedOut": null,
              "duration": 251,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let id = _factory.default.gerarId();\n_serverest.default.deletarUsuarioNaoExiste(id).then(res => {\n  cy.contractValidation(res, 'delete-usuarios/id', 200);\n  _validaServerest.default.ValidarDeletarUsuarioNaoExiste(res, 200);\n});",
              "err": {},
              "uuid": "cb22d728-3683-49bf-9873-60fc2f3d6342",
              "parentUUID": "35a1dbf9-fb8f-4b53-a2f7-29dc706205b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "331e1cce-94e3-48d4-98fc-324be780cba8",
            "d6996990-e5bd-486b-af95-2fe282ecef84",
            "91b04772-91c8-40d3-854e-15a631437f0f",
            "7104fc19-8dae-4039-a1a2-9f30d863effe",
            "5636d856-b08d-4d15-bb66-db24279096d0",
            "22d32497-1ba1-48bf-908c-2502d91fedbc",
            "cb22d728-3683-49bf-9873-60fc2f3d6342"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2703,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d0455a39-063e-44e1-9eb6-299c98bc53df",
      "title": "",
      "fullFile": "cypress/integration/3_login.spec.js",
      "file": "cypress/integration/3_login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9d4a7f05-892c-4060-adf5-766ba092e88e",
          "title": "Casos de teste da rota /login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "T12 - Realizar login com sucesso",
              "fullTitle": "Casos de teste da rota /login T12 - Realizar login com sucesso",
              "timedOut": null,
              "duration": 499,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioAleatorio();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.login(usuario).then(res => {\n    cy.contractValidation(res, 'post-login', 200);\n    _validaServerest.default.ValidaLogin(res, 200);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "2a6b5e9f-655a-4a3c-ab92-0e40eeb3d812",
              "parentUUID": "9d4a7f05-892c-4060-adf5-766ba092e88e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T13 - Falhar ao tentar realizar um login",
              "fullTitle": "Casos de teste da rota /login T13 - Falhar ao tentar realizar um login",
              "timedOut": null,
              "duration": 712,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarEmailAleatorio();\ncy.get('@usuarioEmail').then(usuario => {\n  let usuarioEmail = JSON.stringify(usuario.email);\n  _serverest.default.loginSemSucesso(usuarioEmail.slice(1, usuarioEmail.length - 2)).then(res => {\n    cy.contractValidation(res, 'post-login', 400);\n    _validaServerest.default.ValidaLoginSemSucesso(res, 400);\n  });\n});",
              "err": {
                "message": "AssertionError: expected 401 to equal 400",
                "estack": "AssertionError: expected 401 to equal 400\n    at Function.ValidaLoginSemSucesso (https://serverest.dev/__cypress/tests?p=cypress\\integration\\3_login.spec.js:691:30)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\3_login.spec.js:202:34)",
                "diff": "- 401\n+ 400\n"
              },
              "uuid": "367c7f9e-2a9d-419e-9159-1c821550e659",
              "parentUUID": "9d4a7f05-892c-4060-adf5-766ba092e88e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2a6b5e9f-655a-4a3c-ab92-0e40eeb3d812"
          ],
          "failures": [
            "367c7f9e-2a9d-419e-9159-1c821550e659"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1211,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e5e9c225-67fb-4055-ba9a-2867de087601",
      "title": "",
      "fullFile": "cypress/integration/4_produtos.spec.js",
      "file": "cypress/integration/4_produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f53a6d6a-4e5f-4b71-bd8d-6d38caae40a5",
          "title": "Casos de teste da rota /produtos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "T14 - Buscar todos os produtos",
              "fullTitle": "Casos de teste da rota /produtos da API Serverest T14 - Buscar todos os produtos",
              "timedOut": null,
              "duration": 565,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarProdutos().then(res => {\n  cy.contractValidation(res, 'get-produtos', 200);\n  _validaServerest.default.validaBuscaDeProdutos(res, 200);\n});",
              "err": {
                "message": "Error: Erros encontrados na validação de contrato, por favor verifique:  must have required property 'usuarios', but receive object\n",
                "estack": "Error: Erros encontrados na validação de contrato, por favor verifique:  must have required property 'usuarios', but receive object\n\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\support\\index.js:161:13)",
                "diff": null
              },
              "uuid": "6765a24f-84f5-43a6-b072-a6a82ed10041",
              "parentUUID": "f53a6d6a-4e5f-4b71-bd8d-6d38caae40a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T15 - Buscar um produto em específico",
              "fullTitle": "Casos de teste da rota /produtos da API Serverest T15 - Buscar um produto em específico",
              "timedOut": null,
              "duration": 445,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarIdProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.localizarProdutoComId(produtoId._id).then(res => {\n    cy.contractValidation(res, 'get-produtos/id', 200);\n    _validaServerest.default.validaBuscaDeProdutosComId(res, 200);\n  });\n});",
              "err": {},
              "uuid": "cdd026f9-8ccf-495f-ab3b-c5b0f055daf3",
              "parentUUID": "f53a6d6a-4e5f-4b71-bd8d-6d38caae40a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Postando usuário administrador para os testes que precisa de admin",
              "fullTitle": "Casos de teste da rota /produtos da API Serverest Postando usuário administrador para os testes que precisa de admin",
              "timedOut": null,
              "duration": 214,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let usuario = _factory.default.gerarNovoUsuario();\n_serverest.default.postarNovoUsuarioComParametro(usuario).then(res => {\n  cy.contractValidation(res, 'post-usuarios', 201);\n  _validaServerest.default.ValidarPostarNovoUsuario(res, 201);\n  Cypress.env('usuarioAdminLogin', {\n    \"email\": usuario.email,\n    \"password\": usuario.password\n  });\n});",
              "err": {},
              "uuid": "dc6a1907-69c7-4385-854c-e43b54bf3902",
              "parentUUID": "f53a6d6a-4e5f-4b71-bd8d-6d38caae40a5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "8949c7a0-f09c-4800-946c-f72764fcead4",
              "title": "T12 - Realizar login com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "T16 - Postar um novo produto",
                  "fullTitle": "Casos de teste da rota /produtos da API Serverest T12 - Realizar login com sucesso T16 - Postar um novo produto",
                  "timedOut": null,
                  "duration": 414,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarProduto().then(res => {\n  cy.contractValidation(res, 'post-produtos', 201);\n  _validaServerest.default.validaCadastroDeProduto(res, 201);\n  Cypress.env('produtoId', res.body._id);\n});",
                  "err": {},
                  "uuid": "0c6f4239-72bb-4df1-baec-fc72f8e02bce",
                  "parentUUID": "8949c7a0-f09c-4800-946c-f72764fcead4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T17 - Modificar as informações de um produto",
                  "fullTitle": "Casos de teste da rota /produtos da API Serverest T12 - Realizar login com sucesso T17 - Modificar as informações de um produto",
                  "timedOut": null,
                  "duration": 630,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarIdProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.modificarProduto(produtoId._id).then(res => {\n    cy.contractValidation(res, 'put-produtos/id', 200);\n    _validaServerest.default.validarModificarProduto(res, 200);\n  });\n});",
                  "err": {},
                  "uuid": "871b8981-30fa-4a86-9b89-811b03653288",
                  "parentUUID": "8949c7a0-f09c-4800-946c-f72764fcead4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T18 - Postar novo produto pelo método PUT",
                  "fullTitle": "Casos de teste da rota /produtos da API Serverest T12 - Realizar login com sucesso T18 - Postar novo produto pelo método PUT",
                  "timedOut": null,
                  "duration": 219,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = _factory.default.gerarId();\n_serverest.default.criarProdutoComPut(id).then(res => {\n  cy.contractValidation(res, 'put-produtos/id', 201);\n  _validaServerest.default.validaCadastroDeProduto(res, 201);\n});",
                  "err": {},
                  "uuid": "33b30a48-8fa3-4f67-9c27-38dc391446b6",
                  "parentUUID": "8949c7a0-f09c-4800-946c-f72764fcead4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T19 - Deletar um produto",
                  "fullTitle": "Casos de teste da rota /produtos da API Serverest T12 - Realizar login com sucesso T19 - Deletar um produto",
                  "timedOut": null,
                  "duration": 403,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let produtoId = Cypress.env('produtoId');\n_serverest.default.deletarProduto(produtoId).then(res => {\n  cy.contractValidation(res, 'delete-produtos/id', 200);\n  _validaServerest.default.validarDeletarProduto(res, 200);\n});",
                  "err": {},
                  "uuid": "732a4122-f6bd-4a18-9a0a-4d240262a85a",
                  "parentUUID": "8949c7a0-f09c-4800-946c-f72764fcead4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T20 - Deletar um produto que não exista",
                  "fullTitle": "Casos de teste da rota /produtos da API Serverest T12 - Realizar login com sucesso T20 - Deletar um produto que não exista",
                  "timedOut": null,
                  "duration": 195,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = _factory.default.gerarId();\n_serverest.default.deletarProdutoNaoExiste(id).then(res => {\n  cy.contractValidation(res, 'delete-produtos/id', 200);\n  _validaServerest.default.ValidarDeletarProdutoNaoExiste(res, 200);\n});",
                  "err": {},
                  "uuid": "451774c2-6cfd-4dd1-ae67-49344684af7f",
                  "parentUUID": "8949c7a0-f09c-4800-946c-f72764fcead4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0c6f4239-72bb-4df1-baec-fc72f8e02bce",
                "871b8981-30fa-4a86-9b89-811b03653288",
                "33b30a48-8fa3-4f67-9c27-38dc391446b6",
                "732a4122-f6bd-4a18-9a0a-4d240262a85a",
                "451774c2-6cfd-4dd1-ae67-49344684af7f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1861,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "cdd026f9-8ccf-495f-ab3b-c5b0f055daf3",
            "dc6a1907-69c7-4385-854c-e43b54bf3902"
          ],
          "failures": [
            "6765a24f-84f5-43a6-b072-a6a82ed10041"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1224,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "128f7424-3142-453e-93e6-97cb59e517b2",
      "title": "",
      "fullFile": "cypress/integration/5_carrinhos.spec.js",
      "file": "cypress/integration/5_carrinhos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b3bbed90-d749-418b-8ad9-3077fc80809c",
          "title": "Casos de teste da rota /carrinhos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "T31 - Buscar todos os carrinhos",
              "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T31 - Buscar todos os carrinhos",
              "timedOut": null,
              "duration": 673,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarCarrinhos().then(res => {\n  cy.contractValidation(res, 'get-carrinhos', 200);\n  _validaServerest.default.validaBuscaDeCarrinhos(res, 200);\n});",
              "err": {
                "message": "Error: Erros encontrados na validação de contrato, por favor verifique: /carrinhos/0/produtos/0 must be array, but receive object\n/carrinhos/0/produtos/1 must be array, but receive object\n",
                "estack": "Error: Erros encontrados na validação de contrato, por favor verifique: /carrinhos/0/produtos/0 must be array, but receive object\n/carrinhos/0/produtos/1 must be array, but receive object\n\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\support\\index.js:161:13)",
                "diff": null
              },
              "uuid": "636bd2cf-ef5e-45b2-8676-8aaf70d4c342",
              "parentUUID": "b3bbed90-d749-418b-8ad9-3077fc80809c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T38 - Falhar ao pesquisar carrinho que não exista",
              "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T38 - Falhar ao pesquisar carrinho que não exista",
              "timedOut": null,
              "duration": 265,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let id = _factory.default.gerarId();\n_serverest.default.localizarCarrinhoComIdPodeFalhar(id).then(res => {\n  cy.contractValidation(res, 'get-carrinhos/id', 400);\n  _validaServerest.default.validaBuscaDeCarrinhosSemSucesso(res, 400);\n});",
              "err": {},
              "uuid": "e77b8d1d-3c8d-4880-8f8b-9afedcc488a1",
              "parentUUID": "b3bbed90-d749-418b-8ad9-3077fc80809c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "23d24676-9329-4467-9a62-0e949dcd4ec3",
              "title": "T12 - Realizar login com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Teste extra para conclusão de carrinho de usuário, caso exista um",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso Teste extra para conclusão de carrinho de usuário, caso exista um",
                  "timedOut": null,
                  "duration": 622,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/concluir-compra', 200);\n});",
                  "err": {},
                  "uuid": "13443a5f-fb23-4f7f-ba35-c0fc795e79d9",
                  "parentUUID": "23d24676-9329-4467-9a62-0e949dcd4ec3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T33 - Postar um novo carrinho",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T33 - Postar um novo carrinho",
                  "timedOut": null,
                  "duration": 411,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.cadastrarCarrinho(produtoId._id).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 201);\n    _validaServerest.default.validaCadastroDeCarrinho(res, 201);\n  });\n});",
                  "err": {},
                  "uuid": "21a28adb-4bad-4da4-b7ec-7f491e63cfa6",
                  "parentUUID": "23d24676-9329-4467-9a62-0e949dcd4ec3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T40 - Falhar ao postar carrinho em usuário que já tenha um carrinho cadastrado",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T40 - Falhar ao postar carrinho em usuário que já tenha um carrinho cadastrado",
                  "timedOut": null,
                  "duration": 449,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.cadastrarCarrinhoPodeFalhar(produtoId._id).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 400);\n    _validaServerest.default.validaCadastroDeCarrinhoComCarrinhoJaCadastrado(res, 400);\n  });\n});",
                  "err": {},
                  "uuid": "2f718dba-a7d2-4a08-afe9-7f090d030df3",
                  "parentUUID": "23d24676-9329-4467-9a62-0e949dcd4ec3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T32 - Buscar um carrinho em específico",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T32 - Buscar um carrinho em específico",
                  "timedOut": null,
                  "duration": 655,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarIdCarrinhoAleatorio();\ncy.get('@carrinhoId').then(carrinhoId => {\n  _serverest.default.localizarCarrinhoComId(carrinhoId._id).then(res => {\n    cy.contractValidation(res, 'get-carrinhos/id', 200);\n    _validaServerest.default.validaBuscaDeCarrinhosComId(res, 200);\n  });\n});",
                  "err": {
                    "message": "Error: Erros encontrados na validação de contrato, por favor verifique: /produtos/0 must be array, but receive object\n",
                    "estack": "Error: Erros encontrados na validação de contrato, por favor verifique: /produtos/0 must be array, but receive object\n\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\support\\index.js:161:13)",
                    "diff": null
                  },
                  "uuid": "597afac7-27b7-4646-a191-c07ad3326ffa",
                  "parentUUID": "23d24676-9329-4467-9a62-0e949dcd4ec3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T34 - Concluir compra de um carrinho",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T34 - Concluir compra de um carrinho",
                  "timedOut": null,
                  "duration": 235,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/concluir-compra', 200);\n  _validaServerest.default.validaConclusaoDeCarrinho(res, 200);\n});",
                  "err": {},
                  "uuid": "9e4a2ea2-b4ec-4386-bd09-1781acb4c336",
                  "parentUUID": "23d24676-9329-4467-9a62-0e949dcd4ec3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T35 - Concluir compra sem que exista um carrinho vinculado ao usuário",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T35 - Concluir compra sem que exista um carrinho vinculado ao usuário",
                  "timedOut": null,
                  "duration": 239,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/concluir-compra', 200);\n  _validaServerest.default.validaConclusaoDeCarrinhoSemCarrinho(res, 200);\n});",
                  "err": {},
                  "uuid": "5568d82e-032c-4e50-a7a8-83a82d2d889e",
                  "parentUUID": "23d24676-9329-4467-9a62-0e949dcd4ec3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Postando outro carrinho para os testes de cancelamento",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso Postando outro carrinho para os testes de cancelamento",
                  "timedOut": null,
                  "duration": 434,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.cadastrarCarrinho(produtoId._id).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 201);\n    _validaServerest.default.validaCadastroDeCarrinho(res, 201);\n  });\n});",
                  "err": {},
                  "uuid": "93816273-d398-48ed-82ae-ee7597c2688f",
                  "parentUUID": "23d24676-9329-4467-9a62-0e949dcd4ec3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T36 - Cancelar compra de um carrinho",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T36 - Cancelar compra de um carrinho",
                  "timedOut": null,
                  "duration": 444,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cancelarCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/cancelar-compra', 200);\n  _validaServerest.default.validaCancelamentoDeCarrinho(res, 200);\n});",
                  "err": {
                    "message": "AssertionError: expected 'Registro excluído com sucesso. Estoque dos produtos reabastecido' to equal 'Registro excluído com sucesso'",
                    "estack": "AssertionError: expected 'Registro excluído com sucesso. Estoque dos produtos reabastecido' to equal 'Registro excluído com sucesso'\n    at Function.validaCancelamentoDeCarrinho (https://serverest.dev/__cypress/tests?p=cypress\\integration\\5_carrinhos.spec.js:875:36)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\5_carrinhos.spec.js:279:34)",
                    "diff": "- 'Registro excluído com sucesso. Estoque dos produtos reabastecido'\n+ 'Registro excluído com sucesso'\n"
                  },
                  "uuid": "6c47ccbf-250b-4d6a-8720-6eed123a2d7f",
                  "parentUUID": "23d24676-9329-4467-9a62-0e949dcd4ec3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T37 - Cancelar compra sem que exista um carrinho vinculado ao usuário",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T37 - Cancelar compra sem que exista um carrinho vinculado ao usuário",
                  "timedOut": null,
                  "duration": 200,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cancelarCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/cancelar-compra', 200);\n  _validaServerest.default.validaCancelamentoDeCarrinhoSemCarrinho(res, 200);\n});",
                  "err": {},
                  "uuid": "7715c653-8185-4d84-b26d-c0abdfecdc7a",
                  "parentUUID": "23d24676-9329-4467-9a62-0e949dcd4ec3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T39 - Falhar ao postar carrinho com produto duplicado",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T39 - Falhar ao postar carrinho com produto duplicado",
                  "timedOut": null,
                  "duration": 407,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.cadastrarCarrinhoDoisProdutosPodeFalhar(produtoId._id).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 400);\n    _validaServerest.default.validaCadastroDeCarrinhoComDoisProdutosIguais(res, 400);\n  });\n});",
                  "err": {},
                  "uuid": "89ffa9f0-ee6a-4fc8-82ea-2fdbf78711c0",
                  "parentUUID": "23d24676-9329-4467-9a62-0e949dcd4ec3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T41 - Falhar ao postar carrinho com produto que não exista ",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T41 - Falhar ao postar carrinho com produto que não exista ",
                  "timedOut": null,
                  "duration": 203,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = _factory.default.gerarId();\n_serverest.default.cadastrarCarrinhoPodeFalhar(id).then(res => {\n  cy.contractValidation(res, 'post-carrinhos', 400);\n  _validaServerest.default.validaCadastroDeCarrinhoComProdutoNaoExiste(res, 400);\n});",
                  "err": {},
                  "uuid": "6c443898-f63a-4037-b5a9-af1c44815471",
                  "parentUUID": "23d24676-9329-4467-9a62-0e949dcd4ec3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T42 - Falhar ao postar carrinho com produto sem quantidade o suficiente",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T42 - Falhar ao postar carrinho com produto sem quantidade o suficiente",
                  "timedOut": null,
                  "duration": 452,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.cadastrarCarrinhoPodeFalhar(produtoId._id, 99999999999999).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 400);\n    _validaServerest.default.validaCadastroDeCarrinhoComProdutoSemQuantidade(res, 400);\n  });\n});",
                  "err": {},
                  "uuid": "87dcc729-46af-4555-b3b0-25db57b42b3b",
                  "parentUUID": "23d24676-9329-4467-9a62-0e949dcd4ec3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T43 - Falhar ao tentar postar um carrinho logado com um token inválido",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T43 - Falhar ao tentar postar um carrinho logado com um token inválido",
                  "timedOut": null,
                  "duration": 459,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.gerarBearerInexistente();\n_serverest.default.buscarProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.cadastrarCarrinhoPodeFalhar(produtoId._id).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 401);\n    _validaServerest.default.validaTokenInexistente(res, 401);\n  });\n});",
                  "err": {},
                  "uuid": "4dbaa984-e513-42df-9dff-7a08d8613c1e",
                  "parentUUID": "23d24676-9329-4467-9a62-0e949dcd4ec3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T44 - Falhar ao concluir compra de carrinho logado com um token inválido",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T44 - Falhar ao concluir compra de carrinho logado com um token inválido",
                  "timedOut": null,
                  "duration": 211,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompraPodeFalhar().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/concluir-compra', 401);\n  _validaServerest.default.validaTokenInexistente(res, 401);\n});",
                  "err": {},
                  "uuid": "cbf94a5c-57cd-4a00-98c3-1b197c736501",
                  "parentUUID": "23d24676-9329-4467-9a62-0e949dcd4ec3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T45 - Falhar ao cancelar compra de carrinho logado com um token inválido",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T45 - Falhar ao cancelar compra de carrinho logado com um token inválido",
                  "timedOut": null,
                  "duration": 198,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cancelarCompraPodeFalhar().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/cancelar-compra', 401);\n  _validaServerest.default.validaTokenInexistente(res, 401);\n});",
                  "err": {},
                  "uuid": "e015c47f-6337-4d67-b865-7ec058e3a27e",
                  "parentUUID": "23d24676-9329-4467-9a62-0e949dcd4ec3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "13443a5f-fb23-4f7f-ba35-c0fc795e79d9",
                "21a28adb-4bad-4da4-b7ec-7f491e63cfa6",
                "2f718dba-a7d2-4a08-afe9-7f090d030df3",
                "9e4a2ea2-b4ec-4386-bd09-1781acb4c336",
                "5568d82e-032c-4e50-a7a8-83a82d2d889e",
                "93816273-d398-48ed-82ae-ee7597c2688f",
                "7715c653-8185-4d84-b26d-c0abdfecdc7a",
                "89ffa9f0-ee6a-4fc8-82ea-2fdbf78711c0",
                "6c443898-f63a-4037-b5a9-af1c44815471",
                "87dcc729-46af-4555-b3b0-25db57b42b3b",
                "4dbaa984-e513-42df-9dff-7a08d8613c1e",
                "cbf94a5c-57cd-4a00-98c3-1b197c736501",
                "e015c47f-6337-4d67-b865-7ec058e3a27e"
              ],
              "failures": [
                "597afac7-27b7-4646-a191-c07ad3326ffa",
                "6c47ccbf-250b-4d6a-8720-6eed123a2d7f"
              ],
              "pending": [],
              "skipped": [],
              "duration": 5619,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "e77b8d1d-3c8d-4880-8f8b-9afedcc488a1"
          ],
          "failures": [
            "636bd2cf-ef5e-45b2-8676-8aaf70d4c342"
          ],
          "pending": [],
          "skipped": [],
          "duration": 938,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "16dc2e5a-c946-4446-84d4-b0fcf865a4b9",
      "title": "",
      "fullFile": "cypress/integration/1_fluxoPrincipal.spec.js",
      "file": "cypress/integration/1_fluxoPrincipal.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "22ec7646-cc6d-4486-ae7f-3759824cf104",
          "title": "Casos de teste do fluxo principal",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "T03 - Postar um novo usuário",
              "fullTitle": "Casos de teste do fluxo principal T03 - Postar um novo usuário",
              "timedOut": null,
              "duration": 591,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.postarNovoUsuarioComParametro(usuario).then(res => {\n  cy.contractValidation(res, 'post-usuarios', 201);\n  _validaServerest.default.ValidarPostarNovoUsuario(res, 201);\n  Cypress.env('usuarioLoginFluxo', {\n    \"email\": usuario.email,\n    \"password\": usuario.password\n  });\n});",
              "err": {},
              "uuid": "7a0f7461-43fa-45c1-9ec8-b674ef2fd485",
              "parentUUID": "22ec7646-cc6d-4486-ae7f-3759824cf104",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "89c48a55-c6cd-4520-9933-a00c6483a309",
              "title": "T12 - Realizar login com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "T33 - Postar um novo carrinho",
                  "fullTitle": "Casos de teste do fluxo principal T12 - Realizar login com sucesso T33 - Postar um novo carrinho",
                  "timedOut": null,
                  "duration": 741,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.cadastrarCarrinho(produtoId._id).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 201);\n    _validaServerest.default.validaCadastroDeCarrinho(res, 201);\n    _serverest.default.SalvaIdDeCarrinho(res.body._id);\n  });\n});",
                  "err": {},
                  "uuid": "47a8b38e-65e7-462e-a442-cbbb88dd3f3a",
                  "parentUUID": "89c48a55-c6cd-4520-9933-a00c6483a309",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T34 - Concluir compra de um carrinho",
                  "fullTitle": "Casos de teste do fluxo principal T12 - Realizar login com sucesso T34 - Concluir compra de um carrinho",
                  "timedOut": null,
                  "duration": 233,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/concluir-compra', 200);\n  _validaServerest.default.validaConclusaoDeCarrinho(res, 200);\n});",
                  "err": {},
                  "uuid": "fe1ed212-8119-435c-9b19-fa8ce396251d",
                  "parentUUID": "89c48a55-c6cd-4520-9933-a00c6483a309",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "47a8b38e-65e7-462e-a442-cbbb88dd3f3a",
                "fe1ed212-8119-435c-9b19-fa8ce396251d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 974,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "7a0f7461-43fa-45c1-9ec8-b674ef2fd485"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 591,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}