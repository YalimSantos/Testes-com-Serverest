{
  "stats": {
    "suites": 5,
    "tests": 37,
    "passes": 32,
    "pending": 0,
    "failures": 5,
    "start": "2022-09-27T17:07:37.833Z",
    "end": "2022-09-27T17:08:27.256Z",
    "duration": 16344,
    "testsRegistered": 37,
    "passPercent": 86.48648648648648,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fd6da4bf-4a62-4638-9716-496487cada64",
      "title": "",
      "fullFile": "cypress/integration/2_usuarios.spec.js",
      "file": "cypress/integration/2_usuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ea59b150-5ce7-431a-953d-b41f73eef241",
          "title": "Casos de teste da rota /usuarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "T01 - Buscar todos os usuários",
              "fullTitle": "Casos de teste da rota /usuarios T01 - Buscar todos os usuários",
              "timedOut": null,
              "duration": 362,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.contractValidation(res, 'get-usuarios', 200);\n  _validaServerest.default.ValidarBuscaDeUsuarios(res, 200);\n});",
              "err": {},
              "uuid": "64bb0539-b841-4e15-9d98-cf992873c8f2",
              "parentUUID": "ea59b150-5ce7-431a-953d-b41f73eef241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T02 - Buscar um usuário em específico",
              "fullTitle": "Casos de teste da rota /usuarios T02 - Buscar um usuário em específico",
              "timedOut": null,
              "duration": 479,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarIdAleatorio();\ncy.get('@usuarioId').then(usuarioId => {\n  _serverest.default.localizarUsuarioComId(usuarioId._id).then(res => {\n    cy.contractValidation(res, 'get-usuarios/id', 200);\n    _validaServerest.default.ValidarBuscaDeUsuariosComId(res, 200);\n  });\n});",
              "err": {},
              "uuid": "9e55bac7-df58-447d-b046-4c58cf49a24f",
              "parentUUID": "ea59b150-5ce7-431a-953d-b41f73eef241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T03 - Postar um novo usuário",
              "fullTitle": "Casos de teste da rota /usuarios T03 - Postar um novo usuário",
              "timedOut": null,
              "duration": 237,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.postarNovoUsuario().then(res => {\n  cy.contractValidation(res, 'post-usuarios', 201);\n  _validaServerest.default.ValidarPostarNovoUsuario(res, 201);\n  Cypress.env('usuarioNovoId', res.body._id);\n});",
              "err": {},
              "uuid": "2088f35b-4638-4a70-950a-d4efea36101b",
              "parentUUID": "ea59b150-5ce7-431a-953d-b41f73eef241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T04 - Modificar as informações de um usuário",
              "fullTitle": "Casos de teste da rota /usuarios T04 - Modificar as informações de um usuário",
              "timedOut": null,
              "duration": 667,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarIdAleatorio();\ncy.get('@usuarioId').then(usuarioId => {\n  _serverest.default.modificarUsuario(usuarioId._id).then(res => {\n    cy.contractValidation(res, 'put-usuarios/id', 200);\n    _validaServerest.default.validarModificarUsuario(res, 200);\n  });\n});",
              "err": {},
              "uuid": "50148efc-f66b-4798-aa0d-ee387cf7c935",
              "parentUUID": "ea59b150-5ce7-431a-953d-b41f73eef241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T05 - Criar um novo usuário com o método PUT",
              "fullTitle": "Casos de teste da rota /usuarios T05 - Criar um novo usuário com o método PUT",
              "timedOut": null,
              "duration": 226,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let id = _factory.default.gerarId();\n_serverest.default.criarUsuarioComPut(id).then(res => {\n  cy.contractValidation(res, 'put-usuarios/id', 201);\n  _validaServerest.default.ValidarPostarNovoUsuario(res, 201);\n});",
              "err": {},
              "uuid": "a9422b83-651c-42ee-860d-056c7480df31",
              "parentUUID": "ea59b150-5ce7-431a-953d-b41f73eef241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T06 - Deletar um usuário",
              "fullTitle": "Casos de teste da rota /usuarios T06 - Deletar um usuário",
              "timedOut": null,
              "duration": 432,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let usuarioId = Cypress.env('usuarioNovoId');\n_serverest.default.deletarUsuario(usuarioId).then(res => {\n  cy.contractValidation(res, 'delete-usuarios/id', 200);\n  _validaServerest.default.validarDeletarUsuario(res, 200);\n});",
              "err": {},
              "uuid": "392497e5-b670-4938-a8a0-479d3527277f",
              "parentUUID": "ea59b150-5ce7-431a-953d-b41f73eef241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T07 - Deletar um usuário que não exista",
              "fullTitle": "Casos de teste da rota /usuarios T07 - Deletar um usuário que não exista",
              "timedOut": null,
              "duration": 249,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let id = _factory.default.gerarId();\n_serverest.default.deletarUsuarioNaoExiste(id).then(res => {\n  cy.contractValidation(res, 'delete-usuarios/id', 200);\n  _validaServerest.default.ValidarDeletarUsuarioNaoExiste(res, 200);\n});",
              "err": {},
              "uuid": "2aa9b6e6-1e6e-40ec-9a30-dcad98d69c64",
              "parentUUID": "ea59b150-5ce7-431a-953d-b41f73eef241",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "64bb0539-b841-4e15-9d98-cf992873c8f2",
            "9e55bac7-df58-447d-b046-4c58cf49a24f",
            "2088f35b-4638-4a70-950a-d4efea36101b",
            "50148efc-f66b-4798-aa0d-ee387cf7c935",
            "a9422b83-651c-42ee-860d-056c7480df31",
            "392497e5-b670-4938-a8a0-479d3527277f",
            "2aa9b6e6-1e6e-40ec-9a30-dcad98d69c64"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2652,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2939480e-d1ee-4610-bf28-a1226f041563",
      "title": "",
      "fullFile": "cypress/integration/3_login.spec.js",
      "file": "cypress/integration/3_login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "73a2d995-838f-4652-8c66-f337a83a8dfe",
          "title": "Casos de teste da rota /login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "T12 - Realizar login com sucesso",
              "fullTitle": "Casos de teste da rota /login T12 - Realizar login com sucesso",
              "timedOut": null,
              "duration": 565,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioAleatorio();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.login(usuario).then(res => {\n    cy.contractValidation(res, 'post-login', 200);\n    _validaServerest.default.ValidaLogin(res, 200);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "858b464f-0f45-4ad3-9a5c-01340cc49f79",
              "parentUUID": "73a2d995-838f-4652-8c66-f337a83a8dfe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T13 - Falhar ao tentar realizar um login",
              "fullTitle": "Casos de teste da rota /login T13 - Falhar ao tentar realizar um login",
              "timedOut": null,
              "duration": 729,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarEmailAleatorio();\ncy.get('@usuarioEmail').then(usuario => {\n  let usuarioEmail = JSON.stringify(usuario.email);\n  _serverest.default.loginSemSucesso(usuarioEmail.slice(1, usuarioEmail.length - 2)).then(res => {\n    cy.contractValidation(res, 'post-login', 400);\n    _validaServerest.default.ValidaLoginSemSucesso(res, 400);\n  });\n});",
              "err": {
                "message": "AssertionError: expected 401 to equal 400",
                "estack": "AssertionError: expected 401 to equal 400\n    at Function.ValidaLoginSemSucesso (https://serverest.dev/__cypress/tests?p=cypress\\integration\\3_login.spec.js:691:30)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\3_login.spec.js:202:34)",
                "diff": "- 401\n+ 400\n"
              },
              "uuid": "8efa4f7f-73a5-492e-884e-c168b687ce3c",
              "parentUUID": "73a2d995-838f-4652-8c66-f337a83a8dfe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "858b464f-0f45-4ad3-9a5c-01340cc49f79"
          ],
          "failures": [
            "8efa4f7f-73a5-492e-884e-c168b687ce3c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1294,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "52112e79-7040-4e1a-a5c1-0d1bc1d7e9a3",
      "title": "",
      "fullFile": "cypress/integration/4_produtos.spec.js",
      "file": "cypress/integration/4_produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5f3059e0-42b0-4856-b53a-12ec3d5fce0d",
          "title": "Casos de teste da rota /produtos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "T14 - Buscar todos os produtos",
              "fullTitle": "Casos de teste da rota /produtos da API Serverest T14 - Buscar todos os produtos",
              "timedOut": null,
              "duration": 546,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarProdutos().then(res => {\n  cy.contractValidation(res, 'get-produtos', 200);\n  _validaServerest.default.validaBuscaDeProdutos(res, 200);\n});",
              "err": {
                "message": "Error: Erros encontrados na validação de contrato, por favor verifique:  must have required property 'usuarios', but receive object\n",
                "estack": "Error: Erros encontrados na validação de contrato, por favor verifique:  must have required property 'usuarios', but receive object\n\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\support\\index.js:161:13)",
                "diff": null
              },
              "uuid": "cac104d8-f355-491d-a42e-5c946d5a4382",
              "parentUUID": "5f3059e0-42b0-4856-b53a-12ec3d5fce0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T15 - Buscar um produto em específico",
              "fullTitle": "Casos de teste da rota /produtos da API Serverest T15 - Buscar um produto em específico",
              "timedOut": null,
              "duration": 486,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarIdProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.localizarProdutoComId(produtoId._id).then(res => {\n    cy.contractValidation(res, 'get-produtos/id', 200);\n    _validaServerest.default.validaBuscaDeProdutosComId(res, 200);\n  });\n});",
              "err": {},
              "uuid": "f2612561-ea33-4c7c-a0c4-a7c5fe45485f",
              "parentUUID": "5f3059e0-42b0-4856-b53a-12ec3d5fce0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Postando usuário administrador para os testes que precisa de admin",
              "fullTitle": "Casos de teste da rota /produtos da API Serverest Postando usuário administrador para os testes que precisa de admin",
              "timedOut": null,
              "duration": 252,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let usuario = _factory.default.gerarNovoUsuario();\n_serverest.default.postarNovoUsuarioComParametro(usuario).then(res => {\n  cy.contractValidation(res, 'post-usuarios', 201);\n  _validaServerest.default.ValidarPostarNovoUsuario(res, 201);\n  Cypress.env('usuarioAdminLogin', {\n    \"email\": usuario.email,\n    \"password\": usuario.password\n  });\n});",
              "err": {},
              "uuid": "0a2b81b6-1cbd-43af-a361-26b1dc153052",
              "parentUUID": "5f3059e0-42b0-4856-b53a-12ec3d5fce0d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "519601af-c263-42fb-a7c9-02eafcfbac3c",
              "title": "T12 - Realizar login com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "T16 - Postar um novo produto",
                  "fullTitle": "Casos de teste da rota /produtos da API Serverest T12 - Realizar login com sucesso T16 - Postar um novo produto",
                  "timedOut": null,
                  "duration": 496,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarProduto().then(res => {\n  cy.contractValidation(res, 'post-produtos', 201);\n  _validaServerest.default.validaCadastroDeProduto(res, 201);\n  Cypress.env('produtoId', res.body._id);\n});",
                  "err": {},
                  "uuid": "cbb0f7c6-74a3-4575-98a4-bc01d9d79fbf",
                  "parentUUID": "519601af-c263-42fb-a7c9-02eafcfbac3c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T17 - Modificar as informações de um produto",
                  "fullTitle": "Casos de teste da rota /produtos da API Serverest T12 - Realizar login com sucesso T17 - Modificar as informações de um produto",
                  "timedOut": null,
                  "duration": 657,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarIdProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.modificarProduto(produtoId._id).then(res => {\n    cy.contractValidation(res, 'put-produtos/id', 200);\n    _validaServerest.default.validarModificarProduto(res, 200);\n  });\n});",
                  "err": {},
                  "uuid": "4bc8302d-b56b-4787-8c5c-878ac954f115",
                  "parentUUID": "519601af-c263-42fb-a7c9-02eafcfbac3c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T18 - Postar novo produto pelo método PUT",
                  "fullTitle": "Casos de teste da rota /produtos da API Serverest T12 - Realizar login com sucesso T18 - Postar novo produto pelo método PUT",
                  "timedOut": null,
                  "duration": 238,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = _factory.default.gerarId();\n_serverest.default.criarProdutoComPut(id).then(res => {\n  cy.contractValidation(res, 'put-produtos/id', 201);\n  _validaServerest.default.validaCadastroDeProduto(res, 201);\n});",
                  "err": {},
                  "uuid": "e503fa5b-a64f-4c4b-a355-bd618753d7c6",
                  "parentUUID": "519601af-c263-42fb-a7c9-02eafcfbac3c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T19 - Deletar um produto",
                  "fullTitle": "Casos de teste da rota /produtos da API Serverest T12 - Realizar login com sucesso T19 - Deletar um produto",
                  "timedOut": null,
                  "duration": 443,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let produtoId = Cypress.env('produtoId');\n_serverest.default.deletarProduto(produtoId).then(res => {\n  cy.contractValidation(res, 'delete-produtos/id', 200);\n  _validaServerest.default.validarDeletarProduto(res, 200);\n});",
                  "err": {},
                  "uuid": "d1b9337c-d361-4665-948d-54d39fee568f",
                  "parentUUID": "519601af-c263-42fb-a7c9-02eafcfbac3c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T20 - Deletar um produto que não exista",
                  "fullTitle": "Casos de teste da rota /produtos da API Serverest T12 - Realizar login com sucesso T20 - Deletar um produto que não exista",
                  "timedOut": null,
                  "duration": 206,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = _factory.default.gerarId();\n_serverest.default.deletarProdutoNaoExiste(id).then(res => {\n  cy.contractValidation(res, 'delete-produtos/id', 200);\n  _validaServerest.default.ValidarDeletarProdutoNaoExiste(res, 200);\n});",
                  "err": {},
                  "uuid": "a187ffe6-92c0-4c4c-9d0f-1c6273ab6259",
                  "parentUUID": "519601af-c263-42fb-a7c9-02eafcfbac3c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cbb0f7c6-74a3-4575-98a4-bc01d9d79fbf",
                "4bc8302d-b56b-4787-8c5c-878ac954f115",
                "e503fa5b-a64f-4c4b-a355-bd618753d7c6",
                "d1b9337c-d361-4665-948d-54d39fee568f",
                "a187ffe6-92c0-4c4c-9d0f-1c6273ab6259"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2040,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "f2612561-ea33-4c7c-a0c4-a7c5fe45485f",
            "0a2b81b6-1cbd-43af-a361-26b1dc153052"
          ],
          "failures": [
            "cac104d8-f355-491d-a42e-5c946d5a4382"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1284,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4af282c3-f5b2-4c6d-b017-d75b7cf125ae",
      "title": "",
      "fullFile": "cypress/integration/5_carrinhos.spec.js",
      "file": "cypress/integration/5_carrinhos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "50bbe477-28ae-49cd-87bd-15bc73c9ac43",
          "title": "Casos de teste da rota /carrinhos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "T31 - Buscar todos os carrinhos",
              "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T31 - Buscar todos os carrinhos",
              "timedOut": null,
              "duration": 520,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarCarrinhos().then(res => {\n  cy.contractValidation(res, 'get-carrinhos', 200);\n  _validaServerest.default.validaBuscaDeCarrinhos(res, 200);\n});",
              "err": {
                "message": "Error: Erros encontrados na validação de contrato, por favor verifique: /carrinhos/0/produtos/0 must be array, but receive object\n/carrinhos/1/produtos/0 must be array, but receive object\n/carrinhos/1/produtos/1 must be array, but receive object\n/carrinhos/2/produtos/0 must be array, but receive object\n",
                "estack": "Error: Erros encontrados na validação de contrato, por favor verifique: /carrinhos/0/produtos/0 must be array, but receive object\n/carrinhos/1/produtos/0 must be array, but receive object\n/carrinhos/1/produtos/1 must be array, but receive object\n/carrinhos/2/produtos/0 must be array, but receive object\n\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\support\\index.js:161:13)",
                "diff": null
              },
              "uuid": "f4d4ef72-2b75-4c79-bf74-ecf1919de3c8",
              "parentUUID": "50bbe477-28ae-49cd-87bd-15bc73c9ac43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T38 - Falhar ao pesquisar carrinho que não exista",
              "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T38 - Falhar ao pesquisar carrinho que não exista",
              "timedOut": null,
              "duration": 251,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let id = _factory.default.gerarId();\n_serverest.default.localizarCarrinhoComIdPodeFalhar(id).then(res => {\n  cy.contractValidation(res, 'get-carrinhos/id', 400);\n  _validaServerest.default.validaBuscaDeCarrinhosSemSucesso(res, 400);\n});",
              "err": {},
              "uuid": "b987baec-baaa-4f62-9644-84ac37745565",
              "parentUUID": "50bbe477-28ae-49cd-87bd-15bc73c9ac43",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "ae9656c0-4e57-41fa-8c5f-742a430cc719",
              "title": "T12 - Realizar login com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Teste extra para conclusão de carrinho de usuário, caso exista um",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso Teste extra para conclusão de carrinho de usuário, caso exista um",
                  "timedOut": null,
                  "duration": 727,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/concluir-compra', 200);\n});",
                  "err": {},
                  "uuid": "19b342d2-fb05-4c76-b0da-6f70c94a66f8",
                  "parentUUID": "ae9656c0-4e57-41fa-8c5f-742a430cc719",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T33 - Postar um novo carrinho",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T33 - Postar um novo carrinho",
                  "timedOut": null,
                  "duration": 476,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.cadastrarCarrinho(produtoId._id).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 201);\n    _validaServerest.default.validaCadastroDeCarrinho(res, 201);\n  });\n});",
                  "err": {},
                  "uuid": "9ab5c8d1-23b9-4404-8407-b9c05f00ad94",
                  "parentUUID": "ae9656c0-4e57-41fa-8c5f-742a430cc719",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T40 - Falhar ao postar carrinho em usuário que já tenha um carrinho cadastrado",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T40 - Falhar ao postar carrinho em usuário que já tenha um carrinho cadastrado",
                  "timedOut": null,
                  "duration": 860,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.cadastrarCarrinhoPodeFalhar(produtoId._id).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 400);\n    _validaServerest.default.validaCadastroDeCarrinhoComCarrinhoJaCadastrado(res, 400);\n  });\n});",
                  "err": {},
                  "uuid": "fdbabe02-b8fd-4f22-9f06-c22c24d3cd76",
                  "parentUUID": "ae9656c0-4e57-41fa-8c5f-742a430cc719",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T32 - Buscar um carrinho em específico",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T32 - Buscar um carrinho em específico",
                  "timedOut": null,
                  "duration": 689,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarIdCarrinhoAleatorio();\ncy.get('@carrinhoId').then(carrinhoId => {\n  _serverest.default.localizarCarrinhoComId(carrinhoId._id).then(res => {\n    cy.contractValidation(res, 'get-carrinhos/id', 200);\n    _validaServerest.default.validaBuscaDeCarrinhosComId(res, 200);\n  });\n});",
                  "err": {
                    "message": "Error: Erros encontrados na validação de contrato, por favor verifique: /produtos/0 must be array, but receive object\n",
                    "estack": "Error: Erros encontrados na validação de contrato, por favor verifique: /produtos/0 must be array, but receive object\n\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\support\\index.js:161:13)",
                    "diff": null
                  },
                  "uuid": "54682b64-9cef-4931-9998-b42c74ed4112",
                  "parentUUID": "ae9656c0-4e57-41fa-8c5f-742a430cc719",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T34 - Concluir compra de um carrinho",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T34 - Concluir compra de um carrinho",
                  "timedOut": null,
                  "duration": 314,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/concluir-compra', 200);\n  _validaServerest.default.validaConclusaoDeCarrinho(res, 200);\n});",
                  "err": {},
                  "uuid": "c41c7f87-4854-4771-9b76-2e24b0bd1840",
                  "parentUUID": "ae9656c0-4e57-41fa-8c5f-742a430cc719",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T35 - Concluir compra sem que exista um carrinho vinculado ao usuário",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T35 - Concluir compra sem que exista um carrinho vinculado ao usuário",
                  "timedOut": null,
                  "duration": 239,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/concluir-compra', 200);\n  _validaServerest.default.validaConclusaoDeCarrinhoSemCarrinho(res, 200);\n});",
                  "err": {},
                  "uuid": "9cd78dae-a1b7-4e16-9f98-d7631bc962ee",
                  "parentUUID": "ae9656c0-4e57-41fa-8c5f-742a430cc719",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Postando outro carrinho para os testes de cancelamento",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso Postando outro carrinho para os testes de cancelamento",
                  "timedOut": null,
                  "duration": 451,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.cadastrarCarrinho(produtoId._id).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 201);\n    _validaServerest.default.validaCadastroDeCarrinho(res, 201);\n  });\n});",
                  "err": {},
                  "uuid": "5c28d255-3eec-4bfa-aa9c-a3a0ae1519dd",
                  "parentUUID": "ae9656c0-4e57-41fa-8c5f-742a430cc719",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T36 - Cancelar compra de um carrinho",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T36 - Cancelar compra de um carrinho",
                  "timedOut": null,
                  "duration": 466,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cancelarCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/cancelar-compra', 200);\n  _validaServerest.default.validaCancelamentoDeCarrinho(res, 200);\n});",
                  "err": {
                    "message": "AssertionError: expected 'Registro excluído com sucesso. Estoque dos produtos reabastecido' to equal 'Registro excluído com sucesso'",
                    "estack": "AssertionError: expected 'Registro excluído com sucesso. Estoque dos produtos reabastecido' to equal 'Registro excluído com sucesso'\n    at Function.validaCancelamentoDeCarrinho (https://serverest.dev/__cypress/tests?p=cypress\\integration\\5_carrinhos.spec.js:875:36)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\5_carrinhos.spec.js:279:34)",
                    "diff": "- 'Registro excluído com sucesso. Estoque dos produtos reabastecido'\n+ 'Registro excluído com sucesso'\n"
                  },
                  "uuid": "567def0f-e318-4fc1-a99e-84d397281b70",
                  "parentUUID": "ae9656c0-4e57-41fa-8c5f-742a430cc719",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T37 - Cancelar compra sem que exista um carrinho vinculado ao usuário",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T37 - Cancelar compra sem que exista um carrinho vinculado ao usuário",
                  "timedOut": null,
                  "duration": 294,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cancelarCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/cancelar-compra', 200);\n  _validaServerest.default.validaCancelamentoDeCarrinhoSemCarrinho(res, 200);\n});",
                  "err": {},
                  "uuid": "a91d903f-a856-4103-b34e-2dd48b221c14",
                  "parentUUID": "ae9656c0-4e57-41fa-8c5f-742a430cc719",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T39 - Falhar ao postar carrinho com produto duplicado",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T39 - Falhar ao postar carrinho com produto duplicado",
                  "timedOut": null,
                  "duration": 564,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.cadastrarCarrinhoDoisProdutosPodeFalhar(produtoId._id).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 400);\n    _validaServerest.default.validaCadastroDeCarrinhoComDoisProdutosIguais(res, 400);\n  });\n});",
                  "err": {},
                  "uuid": "ebbff1c7-2a97-4dbe-abb0-1c9b0f2eaeb4",
                  "parentUUID": "ae9656c0-4e57-41fa-8c5f-742a430cc719",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T41 - Falhar ao postar carrinho com produto que não exista ",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T41 - Falhar ao postar carrinho com produto que não exista ",
                  "timedOut": null,
                  "duration": 292,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = _factory.default.gerarId();\n_serverest.default.cadastrarCarrinhoPodeFalhar(id).then(res => {\n  cy.contractValidation(res, 'post-carrinhos', 400);\n  _validaServerest.default.validaCadastroDeCarrinhoComProdutoNaoExiste(res, 400);\n});",
                  "err": {},
                  "uuid": "7da7ee90-ddad-469f-a2bb-d09bac6559c7",
                  "parentUUID": "ae9656c0-4e57-41fa-8c5f-742a430cc719",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T42 - Falhar ao postar carrinho com produto sem quantidade o suficiente",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T42 - Falhar ao postar carrinho com produto sem quantidade o suficiente",
                  "timedOut": null,
                  "duration": 516,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.cadastrarCarrinhoPodeFalhar(produtoId._id, 99999999999999).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 400);\n    _validaServerest.default.validaCadastroDeCarrinhoComProdutoSemQuantidade(res, 400);\n  });\n});",
                  "err": {},
                  "uuid": "fb84393c-2b73-48fb-b7b1-6eb8ce7e1884",
                  "parentUUID": "ae9656c0-4e57-41fa-8c5f-742a430cc719",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T43 - Falhar ao tentar postar um carrinho logado com um token inválido",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T43 - Falhar ao tentar postar um carrinho logado com um token inválido",
                  "timedOut": null,
                  "duration": 552,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.gerarBearerInexistente();\n_serverest.default.buscarProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.cadastrarCarrinhoPodeFalhar(produtoId._id).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 401);\n    _validaServerest.default.validaTokenInexistente(res, 401);\n  });\n});",
                  "err": {},
                  "uuid": "1da0e1f2-718e-4605-835c-1589d432bcc3",
                  "parentUUID": "ae9656c0-4e57-41fa-8c5f-742a430cc719",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T44 - Falhar ao concluir compra de carrinho logado com um token inválido",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T44 - Falhar ao concluir compra de carrinho logado com um token inválido",
                  "timedOut": null,
                  "duration": 226,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompraPodeFalhar().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/concluir-compra', 401);\n  _validaServerest.default.validaTokenInexistente(res, 401);\n});",
                  "err": {},
                  "uuid": "05859366-678d-474c-84af-a95cf896af44",
                  "parentUUID": "ae9656c0-4e57-41fa-8c5f-742a430cc719",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T45 - Falhar ao cancelar compra de carrinho logado com um token inválido",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T45 - Falhar ao cancelar compra de carrinho logado com um token inválido",
                  "timedOut": null,
                  "duration": 268,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cancelarCompraPodeFalhar().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/cancelar-compra', 401);\n  _validaServerest.default.validaTokenInexistente(res, 401);\n});",
                  "err": {},
                  "uuid": "fa61953f-fb8a-4f20-8ded-7fae1a2a37fa",
                  "parentUUID": "ae9656c0-4e57-41fa-8c5f-742a430cc719",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "19b342d2-fb05-4c76-b0da-6f70c94a66f8",
                "9ab5c8d1-23b9-4404-8407-b9c05f00ad94",
                "fdbabe02-b8fd-4f22-9f06-c22c24d3cd76",
                "c41c7f87-4854-4771-9b76-2e24b0bd1840",
                "9cd78dae-a1b7-4e16-9f98-d7631bc962ee",
                "5c28d255-3eec-4bfa-aa9c-a3a0ae1519dd",
                "a91d903f-a856-4103-b34e-2dd48b221c14",
                "ebbff1c7-2a97-4dbe-abb0-1c9b0f2eaeb4",
                "7da7ee90-ddad-469f-a2bb-d09bac6559c7",
                "fb84393c-2b73-48fb-b7b1-6eb8ce7e1884",
                "1da0e1f2-718e-4605-835c-1589d432bcc3",
                "05859366-678d-474c-84af-a95cf896af44",
                "fa61953f-fb8a-4f20-8ded-7fae1a2a37fa"
              ],
              "failures": [
                "54682b64-9cef-4931-9998-b42c74ed4112",
                "567def0f-e318-4fc1-a99e-84d397281b70"
              ],
              "pending": [],
              "skipped": [],
              "duration": 6934,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "b987baec-baaa-4f62-9644-84ac37745565"
          ],
          "failures": [
            "f4d4ef72-2b75-4c79-bf74-ecf1919de3c8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 771,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a454d874-8768-438a-8638-1a1acd2dcfcb",
      "title": "",
      "fullFile": "cypress/integration/1_fluxoPrincipal.spec.js",
      "file": "cypress/integration/1_fluxoPrincipal.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5f280b70-a630-487d-89e0-e5b94b401fb6",
          "title": "Casos de teste do fluxo principal",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "T03 - Postar um novo usuário",
              "fullTitle": "Casos de teste do fluxo principal T03 - Postar um novo usuário",
              "timedOut": null,
              "duration": 512,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.postarNovoUsuarioComParametro(usuario).then(res => {\n  cy.contractValidation(res, 'post-usuarios', 201);\n  _validaServerest.default.ValidarPostarNovoUsuario(res, 201);\n  Cypress.env('usuarioLoginFluxo', {\n    \"email\": usuario.email,\n    \"password\": usuario.password\n  });\n});",
              "err": {},
              "uuid": "a7c47fbe-bacd-4908-b25e-06ae8fb8ca87",
              "parentUUID": "5f280b70-a630-487d-89e0-e5b94b401fb6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "3df64ff8-3b41-49db-9404-aad14b4a2ac1",
              "title": "T12 - Realizar login com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "T33 - Postar um novo carrinho",
                  "fullTitle": "Casos de teste do fluxo principal T12 - Realizar login com sucesso T33 - Postar um novo carrinho",
                  "timedOut": null,
                  "duration": 632,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.cadastrarCarrinho(produtoId._id).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 201);\n    _validaServerest.default.validaCadastroDeCarrinho(res, 201);\n    _serverest.default.SalvaIdDeCarrinho(res.body._id);\n  });\n});",
                  "err": {},
                  "uuid": "233afc1b-75b1-4bd5-ab41-4613be4d9def",
                  "parentUUID": "3df64ff8-3b41-49db-9404-aad14b4a2ac1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T34 - Concluir compra de um carrinho",
                  "fullTitle": "Casos de teste do fluxo principal T12 - Realizar login com sucesso T34 - Concluir compra de um carrinho",
                  "timedOut": null,
                  "duration": 225,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/concluir-compra', 200);\n  _validaServerest.default.validaConclusaoDeCarrinho(res, 200);\n});",
                  "err": {},
                  "uuid": "d9cb0666-086e-4978-89f5-b2e7bcebfd01",
                  "parentUUID": "3df64ff8-3b41-49db-9404-aad14b4a2ac1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "233afc1b-75b1-4bd5-ab41-4613be4d9def",
                "d9cb0666-086e-4978-89f5-b2e7bcebfd01"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 857,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "a7c47fbe-bacd-4908-b25e-06ae8fb8ca87"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 512,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}