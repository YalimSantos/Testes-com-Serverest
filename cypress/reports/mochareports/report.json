{
  "stats": {
    "suites": 5,
    "tests": 37,
    "passes": 32,
    "pending": 0,
    "failures": 5,
    "start": "2022-09-27T17:29:33.064Z",
    "end": "2022-09-27T17:30:25.080Z",
    "duration": 16408,
    "testsRegistered": 37,
    "passPercent": 86.48648648648648,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "36d0d730-35a5-4467-90d8-efe65c9c9aff",
      "title": "",
      "fullFile": "cypress/integration/2_usuarios.spec.js",
      "file": "cypress/integration/2_usuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6d31a0e5-617f-47c6-99bf-2b3c455eab4a",
          "title": "Casos de teste da rota /usuarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "T01 - Buscar todos os usuários",
              "fullTitle": "Casos de teste da rota /usuarios T01 - Buscar todos os usuários",
              "timedOut": null,
              "duration": 443,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.contractValidation(res, 'get-usuarios', 200);\n  _validaServerest.default.ValidarBuscaDeUsuarios(res, 200);\n});",
              "err": {},
              "uuid": "87667b23-e5ef-494c-b0ba-0cc17ec9761f",
              "parentUUID": "6d31a0e5-617f-47c6-99bf-2b3c455eab4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T02 - Buscar um usuário em específico",
              "fullTitle": "Casos de teste da rota /usuarios T02 - Buscar um usuário em específico",
              "timedOut": null,
              "duration": 501,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarIdAleatorio();\ncy.get('@usuarioId').then(usuarioId => {\n  _serverest.default.localizarUsuarioComId(usuarioId._id).then(res => {\n    cy.contractValidation(res, 'get-usuarios/id', 200);\n    _validaServerest.default.ValidarBuscaDeUsuariosComId(res, 200);\n  });\n});",
              "err": {},
              "uuid": "8cdfff6d-7dd1-43e8-88ed-0700ad90da7c",
              "parentUUID": "6d31a0e5-617f-47c6-99bf-2b3c455eab4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T03 - Postar um novo usuário",
              "fullTitle": "Casos de teste da rota /usuarios T03 - Postar um novo usuário",
              "timedOut": null,
              "duration": 235,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.postarNovoUsuario().then(res => {\n  cy.contractValidation(res, 'post-usuarios', 201);\n  _validaServerest.default.ValidarPostarNovoUsuario(res, 201);\n  Cypress.env('usuarioNovoId', res.body._id);\n});",
              "err": {},
              "uuid": "ff5cda0a-6c41-4b7b-b0ed-8120e124fd88",
              "parentUUID": "6d31a0e5-617f-47c6-99bf-2b3c455eab4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T04 - Modificar as informações de um usuário",
              "fullTitle": "Casos de teste da rota /usuarios T04 - Modificar as informações de um usuário",
              "timedOut": null,
              "duration": 716,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarIdAleatorio();\ncy.get('@usuarioId').then(usuarioId => {\n  _serverest.default.modificarUsuario(usuarioId._id).then(res => {\n    cy.contractValidation(res, 'put-usuarios/id', 200);\n    _validaServerest.default.validarModificarUsuario(res, 200);\n  });\n});",
              "err": {},
              "uuid": "5b590b12-1d5b-432e-82ca-43acfb22bfc7",
              "parentUUID": "6d31a0e5-617f-47c6-99bf-2b3c455eab4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T05 - Criar um novo usuário com o método PUT",
              "fullTitle": "Casos de teste da rota /usuarios T05 - Criar um novo usuário com o método PUT",
              "timedOut": null,
              "duration": 228,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let id = _factory.default.gerarId();\n_serverest.default.criarUsuarioComPut(id).then(res => {\n  cy.contractValidation(res, 'put-usuarios/id', 201);\n  _validaServerest.default.ValidarPostarNovoUsuario(res, 201);\n});",
              "err": {},
              "uuid": "a9adf90f-f244-436e-9488-5cc72c2e560c",
              "parentUUID": "6d31a0e5-617f-47c6-99bf-2b3c455eab4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T06 - Deletar um usuário",
              "fullTitle": "Casos de teste da rota /usuarios T06 - Deletar um usuário",
              "timedOut": null,
              "duration": 434,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let usuarioId = Cypress.env('usuarioNovoId');\n_serverest.default.deletarUsuario(usuarioId).then(res => {\n  cy.contractValidation(res, 'delete-usuarios/id', 200);\n  _validaServerest.default.validarDeletarUsuario(res, 200);\n});",
              "err": {},
              "uuid": "bd0600c7-542d-4372-9951-d40863ad3494",
              "parentUUID": "6d31a0e5-617f-47c6-99bf-2b3c455eab4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T07 - Deletar um usuário que não exista",
              "fullTitle": "Casos de teste da rota /usuarios T07 - Deletar um usuário que não exista",
              "timedOut": null,
              "duration": 234,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let id = _factory.default.gerarId();\n_serverest.default.deletarUsuarioNaoExiste(id).then(res => {\n  cy.contractValidation(res, 'delete-usuarios/id', 200);\n  _validaServerest.default.ValidarDeletarUsuarioNaoExiste(res, 200);\n});",
              "err": {},
              "uuid": "04fbe8fa-e522-4ffc-967e-dc9acb286dfc",
              "parentUUID": "6d31a0e5-617f-47c6-99bf-2b3c455eab4a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "87667b23-e5ef-494c-b0ba-0cc17ec9761f",
            "8cdfff6d-7dd1-43e8-88ed-0700ad90da7c",
            "ff5cda0a-6c41-4b7b-b0ed-8120e124fd88",
            "5b590b12-1d5b-432e-82ca-43acfb22bfc7",
            "a9adf90f-f244-436e-9488-5cc72c2e560c",
            "bd0600c7-542d-4372-9951-d40863ad3494",
            "04fbe8fa-e522-4ffc-967e-dc9acb286dfc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2791,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2fd5f96a-9d4d-4125-96c6-ef3facb94f84",
      "title": "",
      "fullFile": "cypress/integration/3_login.spec.js",
      "file": "cypress/integration/3_login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "288a1a68-3e9a-4734-99e1-2141f676ed4a",
          "title": "Casos de teste da rota /login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "T12 - Realizar login com sucesso",
              "fullTitle": "Casos de teste da rota /login T12 - Realizar login com sucesso",
              "timedOut": null,
              "duration": 575,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioAleatorio();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.login(usuario).then(res => {\n    cy.contractValidation(res, 'post-login', 200);\n    _validaServerest.default.ValidaLogin(res, 200);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "12c7748a-d8e7-4b26-8b4b-12fb21db6b88",
              "parentUUID": "288a1a68-3e9a-4734-99e1-2141f676ed4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T13 - Falhar ao tentar realizar um login",
              "fullTitle": "Casos de teste da rota /login T13 - Falhar ao tentar realizar um login",
              "timedOut": null,
              "duration": 773,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarEmailAleatorio();\ncy.get('@usuarioEmail').then(usuario => {\n  let usuarioEmail = JSON.stringify(usuario.email);\n  _serverest.default.loginSemSucesso(usuarioEmail.slice(1, usuarioEmail.length - 2)).then(res => {\n    cy.contractValidation(res, 'post-login', 400);\n    _validaServerest.default.ValidaLoginSemSucesso(res, 400);\n  });\n});",
              "err": {
                "message": "AssertionError: expected 401 to equal 400",
                "estack": "AssertionError: expected 401 to equal 400\n    at Function.ValidaLoginSemSucesso (https://serverest.dev/__cypress/tests?p=cypress\\integration\\3_login.spec.js:691:30)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\3_login.spec.js:202:34)",
                "diff": "- 401\n+ 400\n"
              },
              "uuid": "3bc87240-27d5-4d4c-a7dc-bb0283e8e811",
              "parentUUID": "288a1a68-3e9a-4734-99e1-2141f676ed4a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "12c7748a-d8e7-4b26-8b4b-12fb21db6b88"
          ],
          "failures": [
            "3bc87240-27d5-4d4c-a7dc-bb0283e8e811"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1348,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "74f98faa-48a9-4f12-a2ae-5457855096ea",
      "title": "",
      "fullFile": "cypress/integration/4_produtos.spec.js",
      "file": "cypress/integration/4_produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "854c37ec-a9b7-48b0-a9ae-c47795d2dd31",
          "title": "Casos de teste da rota /produtos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "T14 - Buscar todos os produtos",
              "fullTitle": "Casos de teste da rota /produtos da API Serverest T14 - Buscar todos os produtos",
              "timedOut": null,
              "duration": 559,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarProdutos().then(res => {\n  cy.contractValidation(res, 'get-produtos', 200);\n  _validaServerest.default.validaBuscaDeProdutos(res, 200);\n});",
              "err": {
                "message": "Error: Erros encontrados na validação de contrato, por favor verifique:  must have required property 'usuarios', but receive object\n",
                "estack": "Error: Erros encontrados na validação de contrato, por favor verifique:  must have required property 'usuarios', but receive object\n\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\support\\index.js:161:13)",
                "diff": null
              },
              "uuid": "c10f1792-f370-4df8-8801-b3384725ba5b",
              "parentUUID": "854c37ec-a9b7-48b0-a9ae-c47795d2dd31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T15 - Buscar um produto em específico",
              "fullTitle": "Casos de teste da rota /produtos da API Serverest T15 - Buscar um produto em específico",
              "timedOut": null,
              "duration": 730,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarIdProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.localizarProdutoComId(produtoId._id).then(res => {\n    cy.contractValidation(res, 'get-produtos/id', 200);\n    _validaServerest.default.validaBuscaDeProdutosComId(res, 200);\n  });\n});",
              "err": {},
              "uuid": "b7f9e316-afd9-44f9-9e9c-47c6eaeb5a4c",
              "parentUUID": "854c37ec-a9b7-48b0-a9ae-c47795d2dd31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Postando usuário administrador para os testes que precisa de admin",
              "fullTitle": "Casos de teste da rota /produtos da API Serverest Postando usuário administrador para os testes que precisa de admin",
              "timedOut": null,
              "duration": 227,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let usuario = _factory.default.gerarNovoUsuario();\n_serverest.default.postarNovoUsuarioComParametro(usuario).then(res => {\n  cy.contractValidation(res, 'post-usuarios', 201);\n  _validaServerest.default.ValidarPostarNovoUsuario(res, 201);\n  Cypress.env('usuarioAdminLogin', {\n    \"email\": usuario.email,\n    \"password\": usuario.password\n  });\n});",
              "err": {},
              "uuid": "76266f0e-3c57-442b-aa85-320ade510dda",
              "parentUUID": "854c37ec-a9b7-48b0-a9ae-c47795d2dd31",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "c5228ae9-77b2-4045-a459-7570fa844496",
              "title": "T12 - Realizar login com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "T16 - Postar um novo produto",
                  "fullTitle": "Casos de teste da rota /produtos da API Serverest T12 - Realizar login com sucesso T16 - Postar um novo produto",
                  "timedOut": null,
                  "duration": 443,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarProduto().then(res => {\n  cy.contractValidation(res, 'post-produtos', 201);\n  _validaServerest.default.validaCadastroDeProduto(res, 201);\n  Cypress.env('produtoId', res.body._id);\n});",
                  "err": {},
                  "uuid": "294df39c-9106-465c-bd78-6e84901dbf20",
                  "parentUUID": "c5228ae9-77b2-4045-a459-7570fa844496",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T17 - Modificar as informações de um produto",
                  "fullTitle": "Casos de teste da rota /produtos da API Serverest T12 - Realizar login com sucesso T17 - Modificar as informações de um produto",
                  "timedOut": null,
                  "duration": 704,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarIdProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.modificarProduto(produtoId._id).then(res => {\n    cy.contractValidation(res, 'put-produtos/id', 200);\n    _validaServerest.default.validarModificarProduto(res, 200);\n  });\n});",
                  "err": {},
                  "uuid": "6575412a-0b4a-4b21-bc9f-b45eb905399c",
                  "parentUUID": "c5228ae9-77b2-4045-a459-7570fa844496",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T18 - Postar novo produto pelo método PUT",
                  "fullTitle": "Casos de teste da rota /produtos da API Serverest T12 - Realizar login com sucesso T18 - Postar novo produto pelo método PUT",
                  "timedOut": null,
                  "duration": 242,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = _factory.default.gerarId();\n_serverest.default.criarProdutoComPut(id).then(res => {\n  cy.contractValidation(res, 'put-produtos/id', 201);\n  _validaServerest.default.validaCadastroDeProduto(res, 201);\n});",
                  "err": {},
                  "uuid": "aa69fe95-2ae8-4fc7-a655-7e000764bc50",
                  "parentUUID": "c5228ae9-77b2-4045-a459-7570fa844496",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T19 - Deletar um produto",
                  "fullTitle": "Casos de teste da rota /produtos da API Serverest T12 - Realizar login com sucesso T19 - Deletar um produto",
                  "timedOut": null,
                  "duration": 453,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let produtoId = Cypress.env('produtoId');\n_serverest.default.deletarProduto(produtoId).then(res => {\n  cy.contractValidation(res, 'delete-produtos/id', 200);\n  _validaServerest.default.validarDeletarProduto(res, 200);\n});",
                  "err": {},
                  "uuid": "999c3b6c-7baf-4d0a-9bc9-7ae142e21e6e",
                  "parentUUID": "c5228ae9-77b2-4045-a459-7570fa844496",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T20 - Deletar um produto que não exista",
                  "fullTitle": "Casos de teste da rota /produtos da API Serverest T12 - Realizar login com sucesso T20 - Deletar um produto que não exista",
                  "timedOut": null,
                  "duration": 254,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = _factory.default.gerarId();\n_serverest.default.deletarProdutoNaoExiste(id).then(res => {\n  cy.contractValidation(res, 'delete-produtos/id', 200);\n  _validaServerest.default.ValidarDeletarProdutoNaoExiste(res, 200);\n});",
                  "err": {},
                  "uuid": "c8fde16e-d7b9-41cd-8e2c-ad5af0141062",
                  "parentUUID": "c5228ae9-77b2-4045-a459-7570fa844496",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "294df39c-9106-465c-bd78-6e84901dbf20",
                "6575412a-0b4a-4b21-bc9f-b45eb905399c",
                "aa69fe95-2ae8-4fc7-a655-7e000764bc50",
                "999c3b6c-7baf-4d0a-9bc9-7ae142e21e6e",
                "c8fde16e-d7b9-41cd-8e2c-ad5af0141062"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2096,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "b7f9e316-afd9-44f9-9e9c-47c6eaeb5a4c",
            "76266f0e-3c57-442b-aa85-320ade510dda"
          ],
          "failures": [
            "c10f1792-f370-4df8-8801-b3384725ba5b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1516,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7c82eb84-b552-4e0c-90ce-b7f076587a1f",
      "title": "",
      "fullFile": "cypress/integration/5_carrinhos.spec.js",
      "file": "cypress/integration/5_carrinhos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e274aa4a-5e0c-4651-96a3-ab12bf3b1f2d",
          "title": "Casos de teste da rota /carrinhos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "T31 - Buscar todos os carrinhos",
              "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T31 - Buscar todos os carrinhos",
              "timedOut": null,
              "duration": 561,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarCarrinhos().then(res => {\n  cy.contractValidation(res, 'get-carrinhos', 200);\n  _validaServerest.default.validaBuscaDeCarrinhos(res, 200);\n});",
              "err": {
                "message": "Error: Erros encontrados na validação de contrato, por favor verifique: /carrinhos/0/produtos/0 must be array, but receive object\n/carrinhos/1/produtos/0 must be array, but receive object\n/carrinhos/1/produtos/1 must be array, but receive object\n/carrinhos/2/produtos/0 must be array, but receive object\n",
                "estack": "Error: Erros encontrados na validação de contrato, por favor verifique: /carrinhos/0/produtos/0 must be array, but receive object\n/carrinhos/1/produtos/0 must be array, but receive object\n/carrinhos/1/produtos/1 must be array, but receive object\n/carrinhos/2/produtos/0 must be array, but receive object\n\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\support\\index.js:161:13)",
                "diff": null
              },
              "uuid": "34c2a179-15d5-4626-99b9-dc84d1ff3a0a",
              "parentUUID": "e274aa4a-5e0c-4651-96a3-ab12bf3b1f2d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T38 - Falhar ao pesquisar carrinho que não exista",
              "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T38 - Falhar ao pesquisar carrinho que não exista",
              "timedOut": null,
              "duration": 298,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let id = _factory.default.gerarId();\n_serverest.default.localizarCarrinhoComIdPodeFalhar(id).then(res => {\n  cy.contractValidation(res, 'get-carrinhos/id', 400);\n  _validaServerest.default.validaBuscaDeCarrinhosSemSucesso(res, 400);\n});",
              "err": {},
              "uuid": "517e9f01-6afc-48b9-bba3-e07413c88bb6",
              "parentUUID": "e274aa4a-5e0c-4651-96a3-ab12bf3b1f2d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "181fbb96-05c4-4ce7-8975-477a9512410c",
              "title": "T12 - Realizar login com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Teste extra para conclusão de carrinho de usuário, caso exista um",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso Teste extra para conclusão de carrinho de usuário, caso exista um",
                  "timedOut": null,
                  "duration": 689,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/concluir-compra', 200);\n});",
                  "err": {},
                  "uuid": "d20d9b2e-b793-4f98-bd9e-394430423d2c",
                  "parentUUID": "181fbb96-05c4-4ce7-8975-477a9512410c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T33 - Postar um novo carrinho",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T33 - Postar um novo carrinho",
                  "timedOut": null,
                  "duration": 461,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.cadastrarCarrinho(produtoId._id).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 201);\n    _validaServerest.default.validaCadastroDeCarrinho(res, 201);\n  });\n});",
                  "err": {},
                  "uuid": "167825a2-b67b-4481-be32-000eaec388aa",
                  "parentUUID": "181fbb96-05c4-4ce7-8975-477a9512410c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T40 - Falhar ao postar carrinho em usuário que já tenha um carrinho cadastrado",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T40 - Falhar ao postar carrinho em usuário que já tenha um carrinho cadastrado",
                  "timedOut": null,
                  "duration": 502,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.cadastrarCarrinhoPodeFalhar(produtoId._id).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 400);\n    _validaServerest.default.validaCadastroDeCarrinhoComCarrinhoJaCadastrado(res, 400);\n  });\n});",
                  "err": {},
                  "uuid": "992d0861-55dc-4d20-a6b3-c86795cf0ca8",
                  "parentUUID": "181fbb96-05c4-4ce7-8975-477a9512410c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T32 - Buscar um carrinho em específico",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T32 - Buscar um carrinho em específico",
                  "timedOut": null,
                  "duration": 691,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarIdCarrinhoAleatorio();\ncy.get('@carrinhoId').then(carrinhoId => {\n  _serverest.default.localizarCarrinhoComId(carrinhoId._id).then(res => {\n    cy.contractValidation(res, 'get-carrinhos/id', 200);\n    _validaServerest.default.validaBuscaDeCarrinhosComId(res, 200);\n  });\n});",
                  "err": {
                    "message": "Error: Erros encontrados na validação de contrato, por favor verifique: /produtos/0 must be array, but receive object\n",
                    "estack": "Error: Erros encontrados na validação de contrato, por favor verifique: /produtos/0 must be array, but receive object\n\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\support\\index.js:161:13)",
                    "diff": null
                  },
                  "uuid": "13eb3cf9-012e-4096-80f0-0e0b6410d2a6",
                  "parentUUID": "181fbb96-05c4-4ce7-8975-477a9512410c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T34 - Concluir compra de um carrinho",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T34 - Concluir compra de um carrinho",
                  "timedOut": null,
                  "duration": 240,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/concluir-compra', 200);\n  _validaServerest.default.validaConclusaoDeCarrinho(res, 200);\n});",
                  "err": {},
                  "uuid": "a9d8fa47-0aa3-42a7-bd6c-cbc2a29056f6",
                  "parentUUID": "181fbb96-05c4-4ce7-8975-477a9512410c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T35 - Concluir compra sem que exista um carrinho vinculado ao usuário",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T35 - Concluir compra sem que exista um carrinho vinculado ao usuário",
                  "timedOut": null,
                  "duration": 241,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/concluir-compra', 200);\n  _validaServerest.default.validaConclusaoDeCarrinhoSemCarrinho(res, 200);\n});",
                  "err": {},
                  "uuid": "e8d32916-dd4a-43fe-8deb-ad12cf782876",
                  "parentUUID": "181fbb96-05c4-4ce7-8975-477a9512410c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Postando outro carrinho para os testes de cancelamento",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso Postando outro carrinho para os testes de cancelamento",
                  "timedOut": null,
                  "duration": 523,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.cadastrarCarrinho(produtoId._id).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 201);\n    _validaServerest.default.validaCadastroDeCarrinho(res, 201);\n  });\n});",
                  "err": {},
                  "uuid": "c688cf81-7534-4b9c-a325-8eaddcfc5981",
                  "parentUUID": "181fbb96-05c4-4ce7-8975-477a9512410c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T36 - Cancelar compra de um carrinho",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T36 - Cancelar compra de um carrinho",
                  "timedOut": null,
                  "duration": 450,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cancelarCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/cancelar-compra', 200);\n  _validaServerest.default.validaCancelamentoDeCarrinho(res, 200);\n});",
                  "err": {
                    "message": "AssertionError: expected 'Registro excluído com sucesso. Estoque dos produtos reabastecido' to equal 'Registro excluído com sucesso'",
                    "estack": "AssertionError: expected 'Registro excluído com sucesso. Estoque dos produtos reabastecido' to equal 'Registro excluído com sucesso'\n    at Function.validaCancelamentoDeCarrinho (https://serverest.dev/__cypress/tests?p=cypress\\integration\\5_carrinhos.spec.js:875:36)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\5_carrinhos.spec.js:279:34)",
                    "diff": "- 'Registro excluído com sucesso. Estoque dos produtos reabastecido'\n+ 'Registro excluído com sucesso'\n"
                  },
                  "uuid": "3fe46572-7540-419b-8235-146feb0dd40e",
                  "parentUUID": "181fbb96-05c4-4ce7-8975-477a9512410c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T37 - Cancelar compra sem que exista um carrinho vinculado ao usuário",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T37 - Cancelar compra sem que exista um carrinho vinculado ao usuário",
                  "timedOut": null,
                  "duration": 279,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cancelarCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/cancelar-compra', 200);\n  _validaServerest.default.validaCancelamentoDeCarrinhoSemCarrinho(res, 200);\n});",
                  "err": {},
                  "uuid": "b69de95e-cbc6-48a7-8faf-b5ab940c28c4",
                  "parentUUID": "181fbb96-05c4-4ce7-8975-477a9512410c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T39 - Falhar ao postar carrinho com produto duplicado",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T39 - Falhar ao postar carrinho com produto duplicado",
                  "timedOut": null,
                  "duration": 463,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.cadastrarCarrinhoDoisProdutosPodeFalhar(produtoId._id).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 400);\n    _validaServerest.default.validaCadastroDeCarrinhoComDoisProdutosIguais(res, 400);\n  });\n});",
                  "err": {},
                  "uuid": "c57dd77b-cf21-46a9-a957-c11ec062f1e0",
                  "parentUUID": "181fbb96-05c4-4ce7-8975-477a9512410c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T41 - Falhar ao postar carrinho com produto que não exista ",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T41 - Falhar ao postar carrinho com produto que não exista ",
                  "timedOut": null,
                  "duration": 272,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = _factory.default.gerarId();\n_serverest.default.cadastrarCarrinhoPodeFalhar(id).then(res => {\n  cy.contractValidation(res, 'post-carrinhos', 400);\n  _validaServerest.default.validaCadastroDeCarrinhoComProdutoNaoExiste(res, 400);\n});",
                  "err": {},
                  "uuid": "e2606a76-21f8-4087-a6a5-76530eb71cb3",
                  "parentUUID": "181fbb96-05c4-4ce7-8975-477a9512410c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T42 - Falhar ao postar carrinho com produto sem quantidade o suficiente",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T42 - Falhar ao postar carrinho com produto sem quantidade o suficiente",
                  "timedOut": null,
                  "duration": 518,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.cadastrarCarrinhoPodeFalhar(produtoId._id, 99999999999999).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 400);\n    _validaServerest.default.validaCadastroDeCarrinhoComProdutoSemQuantidade(res, 400);\n  });\n});",
                  "err": {},
                  "uuid": "63b22da6-391d-43d2-86af-f71469e70538",
                  "parentUUID": "181fbb96-05c4-4ce7-8975-477a9512410c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T43 - Falhar ao tentar postar um carrinho logado com um token inválido",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T43 - Falhar ao tentar postar um carrinho logado com um token inválido",
                  "timedOut": null,
                  "duration": 467,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.gerarBearerInexistente();\n_serverest.default.buscarProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.cadastrarCarrinhoPodeFalhar(produtoId._id).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 401);\n    _validaServerest.default.validaTokenInexistente(res, 401);\n  });\n});",
                  "err": {},
                  "uuid": "2e77ba79-2675-4d60-9d86-58076e7ee2e1",
                  "parentUUID": "181fbb96-05c4-4ce7-8975-477a9512410c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T44 - Falhar ao concluir compra de carrinho logado com um token inválido",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T44 - Falhar ao concluir compra de carrinho logado com um token inválido",
                  "timedOut": null,
                  "duration": 269,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompraPodeFalhar().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/concluir-compra', 401);\n  _validaServerest.default.validaTokenInexistente(res, 401);\n});",
                  "err": {},
                  "uuid": "d17e7f17-a419-45fd-8217-803895896af1",
                  "parentUUID": "181fbb96-05c4-4ce7-8975-477a9512410c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T45 - Falhar ao cancelar compra de carrinho logado com um token inválido",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest T12 - Realizar login com sucesso T45 - Falhar ao cancelar compra de carrinho logado com um token inválido",
                  "timedOut": null,
                  "duration": 224,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cancelarCompraPodeFalhar().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/cancelar-compra', 401);\n  _validaServerest.default.validaTokenInexistente(res, 401);\n});",
                  "err": {},
                  "uuid": "9345fc2a-e454-426e-8573-dfb23a4ca5fe",
                  "parentUUID": "181fbb96-05c4-4ce7-8975-477a9512410c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d20d9b2e-b793-4f98-bd9e-394430423d2c",
                "167825a2-b67b-4481-be32-000eaec388aa",
                "992d0861-55dc-4d20-a6b3-c86795cf0ca8",
                "a9d8fa47-0aa3-42a7-bd6c-cbc2a29056f6",
                "e8d32916-dd4a-43fe-8deb-ad12cf782876",
                "c688cf81-7534-4b9c-a325-8eaddcfc5981",
                "b69de95e-cbc6-48a7-8faf-b5ab940c28c4",
                "c57dd77b-cf21-46a9-a957-c11ec062f1e0",
                "e2606a76-21f8-4087-a6a5-76530eb71cb3",
                "63b22da6-391d-43d2-86af-f71469e70538",
                "2e77ba79-2675-4d60-9d86-58076e7ee2e1",
                "d17e7f17-a419-45fd-8217-803895896af1",
                "9345fc2a-e454-426e-8573-dfb23a4ca5fe"
              ],
              "failures": [
                "13eb3cf9-012e-4096-80f0-0e0b6410d2a6",
                "3fe46572-7540-419b-8235-146feb0dd40e"
              ],
              "pending": [],
              "skipped": [],
              "duration": 6289,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "517e9f01-6afc-48b9-bba3-e07413c88bb6"
          ],
          "failures": [
            "34c2a179-15d5-4626-99b9-dc84d1ff3a0a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 859,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "93013921-2fc0-4743-b520-dbde493104e9",
      "title": "",
      "fullFile": "cypress/integration/1_fluxoPrincipal.spec.js",
      "file": "cypress/integration/1_fluxoPrincipal.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6abd7a47-8814-481c-a1ca-14f84122ba16",
          "title": "Casos de teste do fluxo principal",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "T03 - Postar um novo usuário",
              "fullTitle": "Casos de teste do fluxo principal T03 - Postar um novo usuário",
              "timedOut": null,
              "duration": 543,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.postarNovoUsuarioComParametro(usuario).then(res => {\n  cy.contractValidation(res, 'post-usuarios', 201);\n  _validaServerest.default.ValidarPostarNovoUsuario(res, 201);\n  Cypress.env('usuarioLoginFluxo', {\n    \"email\": usuario.email,\n    \"password\": usuario.password\n  });\n});",
              "err": {},
              "uuid": "be6ba801-5638-48d7-8b57-1868713d57d5",
              "parentUUID": "6abd7a47-8814-481c-a1ca-14f84122ba16",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "9caead7d-2748-45da-b25b-ae9b3444cad9",
              "title": "T12 - Realizar login com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "T33 - Postar um novo carrinho",
                  "fullTitle": "Casos de teste do fluxo principal T12 - Realizar login com sucesso T33 - Postar um novo carrinho",
                  "timedOut": null,
                  "duration": 733,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.cadastrarCarrinho(produtoId._id).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 201);\n    _validaServerest.default.validaCadastroDeCarrinho(res, 201);\n    _serverest.default.SalvaIdDeCarrinho(res.body._id);\n  });\n});",
                  "err": {},
                  "uuid": "c52f293a-3830-4690-9af9-8004cef3f2ab",
                  "parentUUID": "9caead7d-2748-45da-b25b-ae9b3444cad9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T34 - Concluir compra de um carrinho",
                  "fullTitle": "Casos de teste do fluxo principal T12 - Realizar login com sucesso T34 - Concluir compra de um carrinho",
                  "timedOut": null,
                  "duration": 233,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/concluir-compra', 200);\n  _validaServerest.default.validaConclusaoDeCarrinho(res, 200);\n});",
                  "err": {},
                  "uuid": "cbdfac9f-b66a-4f71-a545-ffc8d586e5c1",
                  "parentUUID": "9caead7d-2748-45da-b25b-ae9b3444cad9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c52f293a-3830-4690-9af9-8004cef3f2ab",
                "cbdfac9f-b66a-4f71-a545-ffc8d586e5c1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 966,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "be6ba801-5638-48d7-8b57-1868713d57d5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 543,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}