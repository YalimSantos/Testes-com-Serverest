{
  "stats": {
    "suites": 4,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2022-07-07T15:42:45.073Z",
    "end": "2022-07-07T15:43:09.954Z",
    "duration": 4512,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f9a62a34-e4fb-4821-8b57-8f912c87964f",
      "title": "",
      "fullFile": "cypress/integration/login.spec.js",
      "file": "cypress/integration/login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5dc4f1a1-b8f1-40f4-85e9-225c1ea34c28",
          "title": "Casos de teste da rota /login da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve realizar o login com sucesso",
              "fullTitle": "Casos de teste da rota /login da API Serverest Deve realizar o login com sucesso",
              "timedOut": null,
              "duration": 518,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioAleatorio();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.login(usuario).then(res => {\n    cy.contractValidation(res, 'get-login', 200);\n    _validaServerest.default.ValidaLogin(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "832769a8-264b-47e3-b5f3-71dd21955429",
              "parentUUID": "5dc4f1a1-b8f1-40f4-85e9-225c1ea34c28",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar e salvar um usuário em um arquivo json",
              "fullTitle": "Casos de teste da rota /login da API Serverest Deve buscar e salvar um usuário em um arquivo json",
              "timedOut": null,
              "duration": 254,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.contractValidation(res, 'get-usuarios', 200);\n  cy.writeFile('./cypress/fixtures/usuario.json', res.body.usuarios[0]);\n  _validaServerest.default.ValidarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "ef51725a-38c2-443f-a2f8-147b6d2363b1",
              "parentUUID": "5dc4f1a1-b8f1-40f4-85e9-225c1ea34c28",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar o usuário de um arquivo json",
              "fullTitle": "Casos de teste da rota /login da API Serverest Deve buscar o usuário de um arquivo json",
              "timedOut": null,
              "duration": 228,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('usuario.json').then(json => {\n  let usuario = {\n    'email': json.email,\n    'password': json.password\n  };\n  _serverest.default.login(usuario).then(res => {\n    cy.contractValidation(res, 'get-login', 200);\n    _validaServerest.default.ValidaLogin(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "8e6ce09d-9013-427c-96a0-d8d0d166c3fa",
              "parentUUID": "5dc4f1a1-b8f1-40f4-85e9-225c1ea34c28",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "832769a8-264b-47e3-b5f3-71dd21955429",
            "ef51725a-38c2-443f-a2f8-147b6d2363b1",
            "8e6ce09d-9013-427c-96a0-d8d0d166c3fa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1000,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9ade5308-5d61-4488-a3ba-e4817e6e0122",
      "title": "",
      "fullFile": "cypress/integration/produtos.spec.js",
      "file": "cypress/integration/produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5bb0e999-4cb4-4359-ba79-e866c383bfdf",
          "title": "Casos de teste da rota /produtos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os produtos cadastrados",
              "fullTitle": "Casos de teste da rota /produtos da API Serverest Deve buscar todos os produtos cadastrados",
              "timedOut": null,
              "duration": 351,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarProdutos().then(res => {\n  cy.contractValidation(res, 'get-produtos', 200);\n  _validaServerest.default.validaBuscaDeProdutos(res);\n});",
              "err": {},
              "uuid": "0294db33-fb7b-4ad5-9078-cc0e1a22e420",
              "parentUUID": "5bb0e999-4cb4-4359-ba79-e866c383bfdf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "be3e78e7-2e04-4655-8c8e-6d41702581ce",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve postar um novo produto",
                  "fullTitle": "Casos de teste da rota /produtos da API Serverest Logar com sucesso Deve postar um novo produto",
                  "timedOut": null,
                  "duration": 646,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarProduto().then(res => {\n  cy.contractValidation(res, 'post-produtos', 201);\n  _validaServerest.default.validaCadastroDeProduto(res);\n});",
                  "err": {},
                  "uuid": "0d0548b7-9273-449f-99a0-73988373b072",
                  "parentUUID": "be3e78e7-2e04-4655-8c8e-6d41702581ce",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0d0548b7-9273-449f-99a0-73988373b072"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 646,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "0294db33-fb7b-4ad5-9078-cc0e1a22e420"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 351,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c931bbc2-12b1-40d4-b424-53de27866848",
      "title": "",
      "fullFile": "cypress/integration/usuarios.spec.js",
      "file": "cypress/integration/usuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "79862434-7214-4878-8c9f-da4cc6630b85",
          "title": "Casos de teste da rota /usuarios da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os usuários cadastrados",
              "fullTitle": "Casos de teste da rota /usuarios da API Serverest Deve buscar todos os usuários cadastrados",
              "timedOut": null,
              "duration": 453,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.contractValidation(res, 'get-usuarios', 200);\n  _validaServerest.default.ValidarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "e8bf31f2-2419-4eac-a064-2c5666bb4ef1",
              "parentUUID": "79862434-7214-4878-8c9f-da4cc6630b85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Não deve realizar cadastro de um novo usuário",
              "fullTitle": "Casos de teste da rota /usuarios da API Serverest Não deve realizar cadastro de um novo usuário",
              "timedOut": null,
              "duration": 239,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.postarUsuarioJaCadastrado().then(res => {\n  cy.contractValidation(res, 'post-usuarios', 400);\n  expect(res.body.message).to.be.eq('Este email já está sendo usado');\n});",
              "err": {},
              "uuid": "812abbc9-7acb-44fb-8bee-f411dd19af84",
              "parentUUID": "79862434-7214-4878-8c9f-da4cc6630b85",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e8bf31f2-2419-4eac-a064-2c5666bb4ef1",
            "812abbc9-7acb-44fb-8bee-f411dd19af84"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 692,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d6677b69-1ce7-489d-bf69-8ce6c5b599c5",
      "title": "",
      "fullFile": "cypress/integration/carrinhos.spec.js",
      "file": "cypress/integration/carrinhos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "692509e4-7426-4f97-a2a5-bb8d86e90c5c",
          "title": "Casos de teste da rota /carrinhos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os carrinhos cadastrados",
              "fullTitle": "Casos de teste da rota /carrinhos da API Serverest Deve buscar todos os carrinhos cadastrados",
              "timedOut": null,
              "duration": 633,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarCarrinhos().then(res => {\n  cy.contractValidation(res, 'get-carrinhos', 200);\n  _validaServerest.default.validaBuscaDeCarrinhos(res);\n});",
              "err": {},
              "uuid": "043d054f-360b-4c72-93e6-2fc3ed452a0f",
              "parentUUID": "692509e4-7426-4f97-a2a5-bb8d86e90c5c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "3e1793fd-511e-4d1c-8b62-f5bc9ee17be2",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve postar um novo carrinho",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest Logar com sucesso Deve postar um novo carrinho",
                  "timedOut": null,
                  "duration": 972,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.cadastrarCarrinho(produtoId._id).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 201);\n    _validaServerest.default.validaCadastroDeCarrinho(res);\n  });\n});",
                  "err": {},
                  "uuid": "e6ec98bd-4f6a-454a-9d9f-b85a229dbdfa",
                  "parentUUID": "3e1793fd-511e-4d1c-8b62-f5bc9ee17be2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve excluir o novo carrinho criado no teste acima",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest Logar com sucesso Deve excluir o novo carrinho criado no teste acima",
                  "timedOut": null,
                  "duration": 218,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/concluir-compra', 200);\n  _validaServerest.default.validaConclusaoDeCompra(res);\n});",
                  "err": {},
                  "uuid": "83497b5c-871a-4704-bdd9-8b261f54ee59",
                  "parentUUID": "3e1793fd-511e-4d1c-8b62-f5bc9ee17be2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e6ec98bd-4f6a-454a-9d9f-b85a229dbdfa",
                "83497b5c-871a-4704-bdd9-8b261f54ee59"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1190,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "043d054f-360b-4c72-93e6-2fc3ed452a0f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 633,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}