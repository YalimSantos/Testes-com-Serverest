{
  "stats": {
    "suites": 4,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2022-07-08T17:42:33.956Z",
    "end": "2022-07-08T17:42:59.043Z",
    "duration": 4933,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b4581084-2f98-4839-9856-21125d279156",
      "title": "",
      "fullFile": "cypress/integration/login.spec.js",
      "file": "cypress/integration/login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c318a177-8f13-472c-bef7-3792e8f4e32a",
          "title": "Casos de teste da rota /login da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve realizar o login com sucesso",
              "fullTitle": "Casos de teste da rota /login da API Serverest Deve realizar o login com sucesso",
              "timedOut": null,
              "duration": 588,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioAleatorio();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.login(usuario).then(res => {\n    cy.contractValidation(res, 'get-login', 200);\n    _validaServerest.default.ValidaLogin(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "4fcf69db-b1a7-4d40-a481-7b9fa0653ee1",
              "parentUUID": "c318a177-8f13-472c-bef7-3792e8f4e32a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar e salvar um usuário em um arquivo json",
              "fullTitle": "Casos de teste da rota /login da API Serverest Deve buscar e salvar um usuário em um arquivo json",
              "timedOut": null,
              "duration": 303,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.contractValidation(res, 'get-usuarios', 200);\n  cy.writeFile('./cypress/fixtures/usuario.json', res.body.usuarios[0]);\n  _validaServerest.default.ValidarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "36115781-9333-4639-981d-a119581947af",
              "parentUUID": "c318a177-8f13-472c-bef7-3792e8f4e32a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar o usuário de um arquivo json",
              "fullTitle": "Casos de teste da rota /login da API Serverest Deve buscar o usuário de um arquivo json",
              "timedOut": null,
              "duration": 224,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('usuario.json').then(json => {\n  let usuario = {\n    'email': json.email,\n    'password': json.password\n  };\n  _serverest.default.login(usuario).then(res => {\n    cy.contractValidation(res, 'get-login', 200);\n    _validaServerest.default.ValidaLogin(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "5a98e084-e797-48c6-8e58-b8850d56dc0a",
              "parentUUID": "c318a177-8f13-472c-bef7-3792e8f4e32a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4fcf69db-b1a7-4d40-a481-7b9fa0653ee1",
            "36115781-9333-4639-981d-a119581947af",
            "5a98e084-e797-48c6-8e58-b8850d56dc0a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1115,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d34a9f50-989f-4bce-b95e-a91d69291a85",
      "title": "",
      "fullFile": "cypress/integration/produtos.spec.js",
      "file": "cypress/integration/produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e2df562f-17d3-4cde-9f11-011315fdbfa8",
          "title": "Casos de teste da rota /produtos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os produtos cadastrados",
              "fullTitle": "Casos de teste da rota /produtos da API Serverest Deve buscar todos os produtos cadastrados",
              "timedOut": null,
              "duration": 359,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarProdutos().then(res => {\n  cy.contractValidation(res, 'get-produtos', 200);\n  _validaServerest.default.validaBuscaDeProdutos(res);\n});",
              "err": {},
              "uuid": "1532d5ad-368d-44b6-8b64-afa0bf2cdc3a",
              "parentUUID": "e2df562f-17d3-4cde-9f11-011315fdbfa8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "cfe765c3-25b0-488e-a5f9-934aa1b5c830",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve postar um novo produto",
                  "fullTitle": "Casos de teste da rota /produtos da API Serverest Logar com sucesso Deve postar um novo produto",
                  "timedOut": null,
                  "duration": 677,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarProduto().then(res => {\n  cy.contractValidation(res, 'post-produtos', 201);\n  _validaServerest.default.validaCadastroDeProduto(res);\n});",
                  "err": {},
                  "uuid": "c2a140ac-1120-471e-8f99-0805eb3875c5",
                  "parentUUID": "cfe765c3-25b0-488e-a5f9-934aa1b5c830",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c2a140ac-1120-471e-8f99-0805eb3875c5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 677,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "1532d5ad-368d-44b6-8b64-afa0bf2cdc3a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 359,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "93f2fbd4-05c6-4dd5-bcc4-7b712a4c8b0a",
      "title": "",
      "fullFile": "cypress/integration/usuarios.spec.js",
      "file": "cypress/integration/usuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0639a24c-8cbf-436b-b5b7-42c7089fc8bb",
          "title": "Casos de teste da rota /usuarios da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os usuários cadastrados",
              "fullTitle": "Casos de teste da rota /usuarios da API Serverest Deve buscar todos os usuários cadastrados",
              "timedOut": null,
              "duration": 323,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.contractValidation(res, 'get-usuarios', 200);\n  _validaServerest.default.ValidarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "6389ae93-1b04-4311-94eb-bf3c87eaae69",
              "parentUUID": "0639a24c-8cbf-436b-b5b7-42c7089fc8bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Não deve realizar cadastro de um novo usuário",
              "fullTitle": "Casos de teste da rota /usuarios da API Serverest Não deve realizar cadastro de um novo usuário",
              "timedOut": null,
              "duration": 204,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.postarUsuarioJaCadastrado().then(res => {\n  cy.contractValidation(res, 'post-usuarios', 400);\n  expect(res.body.message).to.be.eq('Este email já está sendo usado');\n});",
              "err": {},
              "uuid": "bb44f531-e668-4ece-9dc8-6ec2095d95cc",
              "parentUUID": "0639a24c-8cbf-436b-b5b7-42c7089fc8bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve localizar usuário pelo id",
              "fullTitle": "Casos de teste da rota /usuarios da API Serverest Deve localizar usuário pelo id",
              "timedOut": null,
              "duration": 441,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarIdAleatorio();\ncy.get('@usuarioId').then(usuarioId => {\n  _serverest.default.localizarUsuarioComId(usuarioId._id).then(res => {\n    cy.contractValidation(res, 'get-usuarios/id', 200);\n  });\n});",
              "err": {},
              "uuid": "ad10c935-3d2c-4b43-a325-8abd09d6ca85",
              "parentUUID": "0639a24c-8cbf-436b-b5b7-42c7089fc8bb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6389ae93-1b04-4311-94eb-bf3c87eaae69",
            "bb44f531-e668-4ece-9dc8-6ec2095d95cc",
            "ad10c935-3d2c-4b43-a325-8abd09d6ca85"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 968,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c360d46d-8daf-4690-b53c-134acaa17a89",
      "title": "",
      "fullFile": "cypress/integration/carrinhos.spec.js",
      "file": "cypress/integration/carrinhos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5973f9d2-6e11-45e6-a4ff-b88de8da5aa1",
          "title": "Casos de teste da rota /carrinhos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os carrinhos cadastrados",
              "fullTitle": "Casos de teste da rota /carrinhos da API Serverest Deve buscar todos os carrinhos cadastrados",
              "timedOut": null,
              "duration": 581,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarCarrinhos().then(res => {\n  cy.contractValidation(res, 'get-carrinhos', 200);\n  _validaServerest.default.validaBuscaDeCarrinhos(res);\n});",
              "err": {},
              "uuid": "035bc387-2e86-4e31-b0d9-34a9b12fdcb0",
              "parentUUID": "5973f9d2-6e11-45e6-a4ff-b88de8da5aa1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "c570b24a-1a46-4c3c-b3be-02fb15f7ea09",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve postar um novo carrinho",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest Logar com sucesso Deve postar um novo carrinho",
                  "timedOut": null,
                  "duration": 1028,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoAleatorio();\ncy.get('@produtoId').then(produtoId => {\n  _serverest.default.cadastrarCarrinho(produtoId._id).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 201);\n    _validaServerest.default.validaCadastroDeCarrinho(res);\n  });\n});",
                  "err": {},
                  "uuid": "a49efec4-9e45-41e3-85d8-7a1446c0d498",
                  "parentUUID": "c570b24a-1a46-4c3c-b3be-02fb15f7ea09",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve concluir a compra do novo carrinho criado no teste acima",
                  "fullTitle": "Casos de teste da rota /carrinhos da API Serverest Logar com sucesso Deve concluir a compra do novo carrinho criado no teste acima",
                  "timedOut": null,
                  "duration": 205,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos/concluir-compra', 200);\n  _validaServerest.default.validaConclusaoDeCompra(res);\n});",
                  "err": {},
                  "uuid": "d811acd9-0cd6-4d10-8e88-2e0dba4cb71e",
                  "parentUUID": "c570b24a-1a46-4c3c-b3be-02fb15f7ea09",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a49efec4-9e45-41e3-85d8-7a1446c0d498",
                "d811acd9-0cd6-4d10-8e88-2e0dba4cb71e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1233,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "035bc387-2e86-4e31-b0d9-34a9b12fdcb0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 581,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}